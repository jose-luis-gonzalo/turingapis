{
    "swagger": "2.0",
    "info": {
        "title": "Documents generator",
        "version": "1.0.0",
        "description": "Microservice for create documents and check request status"
    },
    "host": "petstore.swagger.io",
    "basePath": "/api/v1",
    "schemes": [
        "https",
        "http"
    ],
    "paths": {
        "/roles": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Value not found"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "405": {
                        "description": "Validation error"
                    }
                },
                "operationId": "userroles",
                "summary": "Returns user roles from token",
                "description": "Returns user roles from token"
            }
        },
        "/request/{requestId}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "document"
                ],
                "parameters": [
                    {
                        "name": "requestId",
                        "description": "Internal request identifier provided in request creation",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/request"
                        }
                    },
                    "400": {
                        "description": "Value not found"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "405": {
                        "description": "Validation error"
                    }
                },
                "operationId": "RequestById",
                "summary": "Request information and a list of documents related with one order",
                "description": "Returns request information and a list of documents related with it."
            }
        },
        "/request/summary": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DashBoard"
                ],
                "parameters": [
                    {
                        "name": "filter",
                        "description": "Query parameter to specify the search filters. Attribute filters are specified in the following way:\n_?filter=[attributeName][operator][value],...,[value][&|;]...[&|;][attributeName][operator][value],...,[value]_\n\nSupported attributeNames are:\n* brand\n* channel\n* stack\n* step\n\nSupported operators are:\n* Equality: == (equals), != (not equals)\n\n\n\nComma separated values for an attribute are evaluated with OR operator. & is the separator for multiple queries to be evaluated with AND operator while the ; is the separator for multiple queries to be evaluated with OR operator.",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "sort",
                        "description": "Sort parameter to specify the search filters. Sort attributes are specified in the following way:\n_?sort=[attributeName][order][&]...[&][attributeName][order]_\n\nSupported attributeNames are:\n* brand\n* channel\n* stack\n* step\n* createdDate\n* statusDate\n\nSupported orders are:\n* Ascending: asc\n* Descending: desc\n\n\n\n& is the separator for multiple sort parameters",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "description": "Page parameter. \n_?page=[pagenumber],[pagesize]_\n\nDefault pagesize is 20",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "startdate",
                        "description": "Start date from which the requests will be returned by filtering by the request creation date. \nFormat will be YYYY-MM-DD. \nBy default, startdate will be equal than enddate. \nDates between start and end date won't be more than 7.",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "enddate",
                        "description": "End date until which the requests will be returned by filtering by the request creation date. \nFormat will be YYYY-MM-DD. \nBy default, enddate will be equal than today. \nDates between start and end date won't be more than 7.",
                        "in": "query",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/summary_request_item"
                            }
                        }
                    },
                    "400": {
                        "description": "Value not found"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "405": {
                        "description": "Validation error"
                    }
                },
                "operationId": "requestsummary",
                "summary": "Request information summary group in cathegories",
                "description": "This operation provides request cathegories and sumatory of requests in each cathegory.\n\n**Mandatory**\nNone\n\n**Supported filters**\nNot supported\n\n**Supported sort**\nNot supported\n\n**Suported page**\nNot supported\n\n&nbsp;  "
            }
        },
        "/request": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "RequestList"
                ],
                "parameters": [
                    {
                        "name": "filter",
                        "description": "Query parameter to specify the search filters. Attribute filters are specified in the following way:\n_?filters=([attributeName][operator][value],...,[value])[&|;]...[&|;]([attributeName][operator][value],...,[value])_\n\nSupported attributeNames are:\n* brand\n* channel\n* stack\n* step\n* status\n\nSupported operators are:\n* Equality: == (equals), != (not equals)\n\n\n\nComma separated values for an attribute are evaluated with OR operator. & is the separator for multiple queries to be evaluated with AND operator while the ; is the separator for multiple queries to be evaluated with OR operator (OR operator is not implemented).",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "sort",
                        "description": "Sort parameter to specify the search filters. Sort attributes are specified in the following way:\n_?sort=([attributeName][order])[&]...[&]([attributeName][order])_\n\nSupported attributeNames are:\n* brand\n* channel\n* stack\n* step\n* createddate\n* statusdate\n\nSupported orders are:\n* Ascending: asc\n* Descending: desc\n\n\n\n& is the separator for multiple sort parameters",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "description": "Page parameter. \n_?page=([pagenumber] size [pagesize])_\n\nDefault pagenumber is 1.\nDefault pagesize is 20",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "startdate",
                        "description": "Start date from which the requests will be returned by filtering by the request creation date. \nFormat will be YYYY-MM-DD. \nBy default, startdate will be equal than enddate. \nDates between start and end date won't be more than 7.",
                        "in": "query",
                        "type": "string",
                        "pattern": "^((2000|2400|2800|(19|2[0-9](0[48]|[2468][048]|[13579][26])))-02-29)$|^(((19|2[0-9])[0-9]{2})-02-(0[1-9]|1[0-9]|2[0-8]))$|^(((19|2[0-9])[0-9]{2})-(0[13578]|10|12)-(0[1-9]|[12][0-9]|3[01]))$|^(((19|2[0-9])[0-9]{2})-(0[469]|11)-(0[1-9]|[12][0-9]|30))$"
                    },
                    {
                        "name": "enddate",
                        "description": "End date until which the requests will be returned by filtering by the request creation date. \nFormat will be YYYY-MM-DD. \nBy default, enddate will be equal than today. \nDates between start and end date won't be more than 7.",
                        "in": "query",
                        "type": "string",
                        "pattern": "^((2000|2400|2800|(19|2[0-9](0[48]|[2468][048]|[13579][26])))-02-29)$|^(((19|2[0-9])[0-9]{2})-02-(0[1-9]|1[0-9]|2[0-8]))$|^(((19|2[0-9])[0-9]{2})-(0[13578]|10|12)-(0[1-9]|[12][0-9]|3[01]))$|^(((19|2[0-9])[0-9]{2})-(0[469]|11)-(0[1-9]|[12][0-9]|30))$"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/request"
                            }
                        }
                    },
                    "400": {
                        "description": "Value not found"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "405": {
                        "description": "Validation error"
                    }
                },
                "operationId": "requestlist",
                "summary": "Consulta listado de peticiones con un criterio de busqueda/Get request list using query",
                "description": "This operation provides a request list based on filter parameters \n\n**Mandatory**\nNone\n\n**Supported filters**\n* brand\n* channel\n* stack\n* step\n* status\n\n**Supported sort**\n* brand\n* channel\n* stack\n* step\n* status\n* createddate\n* statusdate\n\n**Suported page**\nSupported. Default page 1 pagesize 20.\n\n&nbsp;  "
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "document"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/requestinfo"
                        },
                        "in": "body",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Value not found"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "405": {
                        "description": "Validation error"
                    }
                },
                "operationId": "createDocuments",
                "summary": "Create documents related with one order and step",
                "description": "Create documents related with one order and step. \n\nReturns internal identifier for this request"
            }
        }
    },
    "definitions": {
        "params": {
            "required": [
                "name",
                "value"
            ],
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "params"
            }
        },
        "document": {
            "required": [
                "status",
                "currentStatus",
                "createdDate"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "description": "Unique document identifier",
                    "type": "string"
                },
                "orderitemid": {
                    "description": "Commertial request identifier. It should be null if document is related with complete order, i.e. SEPA document",
                    "type": "string"
                },
                "contractid": {
                    "description": "Contract identifier",
                    "type": "string"
                },
                "documenttype": {
                    "description": "Type of document",
                    "type": "string"
                },
                "documentStatus": {
                    "description": "List of status related with this document",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/status_type"
                    }
                },
                "signaturetype": {
                    "description": "List of signature methods availables for this document",
                    "type": "array",
                    "items": {
                        "description": "Tipo de firma que se puede realizar con el documento. Si es null el documento no tiene que ser firmado/Signature type available for this document. If null, the document doesn't have to be signed",
                        "type": "string"
                    }
                },
                "attachment": {
                    "description": "Link to download the document",
                    "type": "string"
                },
                "digitalSignature": {
                    "description": "List of parameters required for digital signature",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/params"
                    }
                },
                "publishType": {
                    "description": "Storage required for this document.",
                    "type": "string"
                },
                "currentStatus": {
                    "$ref": "#/definitions/status_type",
                    "description": "actual Document Status"
                },
                "createdDate": {
                    "format": "date-time",
                    "description": "Document creation Data time",
                    "type": "string"
                }
            },
            "xml": {
                "name": "document"
            }
        },
        "requestinfo": {
            "required": [
                "orderid",
                "brand",
                "channel",
                "sfid",
                "roles",
                "step"
            ],
            "type": "object",
            "properties": {
                "orderid": {
                    "description": "Order identifier in original stack",
                    "type": "string"
                },
                "orderItemsId": {
                    "description": "List of orderitemid involved in this request. If it's null, request is related with all orderitemid included in the order.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "stack": {
                    "description": "Stack",
                    "enum": [
                        "ALANI",
                        "BAU OSP",
                        "BAU JZZ"
                    ],
                    "type": "string"
                },
                "brand": {
                    "description": "Commertial brand related with order",
                    "default": "ORANGE",
                    "enum": [
                        "ORANGE",
                        "JAZZTEL",
                        "AMENA"
                    ],
                    "type": "string"
                },
                "channel": {
                    "description": "Sales channel",
                    "type": "string"
                },
                "sfid": {
                    "description": "SFID",
                    "type": "string"
                },
                "step": {
                    "description": "Step in contract flow",
                    "enum": [
                        "PURCHASE",
                        "DELIVERY"
                    ],
                    "type": "string"
                },
                "roles": {
                    "description": "List of roles present in sale",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/role_type"
                    }
                },
                "callback": {
                    "description": "Callback url to call when documents generation is completed",
                    "type": "string"
                },
                "metadata": {
                    "description": "Optional parameters for future use",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/params"
                    }
                }
            },
            "xml": {
                "name": "requestinfo"
            }
        },
        "request": {
            "description": "Request information",
            "required": [
                "language",
                "info",
                "currentStatus",
                "createdDate"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "description": "Internal request id",
                    "type": "string"
                },
                "language": {
                    "description": "Document language (ISO 639-1)",
                    "type": "string"
                },
                "info": {
                    "$ref": "#/definitions/requestinfo"
                },
                "status": {
                    "description": "Array of status type for this request",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/status_type"
                    }
                },
                "documents": {
                    "description": "Array of documents related with this request",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/document"
                    }
                },
                "createdDate": {
                    "format": "date-time",
                    "description": "Request creation Data time",
                    "type": "string"
                },
                "currentStatus": {
                    "$ref": "#/definitions/status_type",
                    "description": "actual Request Status"
                }
            }
        },
        "summary_request_item": {
            "type": "object",
            "properties": {
                "stack": {
                    "description": "Stack/Stack",
                    "type": "string"
                },
                "brand": {
                    "description": "Marca sobre la que se realiza la orden/Commertial brand related with order",
                    "type": "string"
                },
                "channel": {
                    "description": "Canal de venta sobre el que se genero la orden/Sales channel",
                    "type": "string"
                },
                "step": {
                    "description": "Paso en el flujo de contratación/Step in contract flow",
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "summary": {
                    "format": "base64",
                    "description": "Number of requests in this cathegory",
                    "type": "integer"
                }
            }
        },
        "status_type": {
            "required": [
                "status"
            ],
            "type": "object",
            "properties": {
                "status": {
                    "description": "Status",
                    "type": "string"
                },
                "statusDate": {
                    "format": "date-time",
                    "description": "Status timestamp          ",
                    "type": "string"
                }
            }
        },
        "role_type": {
            "required": [
                "role_type",
                "doc_number"
            ],
            "type": "object",
            "properties": {
                "role_type": {
                    "enum": [
                        "HOLDER",
                        "LEGAL_REPRESENTATIVE",
                        "PAYER"
                    ],
                    "type": "string"
                },
                "doc_number": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "surname": {
                    "type": "string"
                },
                "second_surmane": {
                    "type": "string"
                }
            }
        }
    },
    "tags": [
        {
            "name": "documentsgenerator",
            "description": "Create and request documents status"
        }
    ]
}