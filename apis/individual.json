{
  "swagger" : "2.0",
  "info" : {
    "description" : "This API manages the individual resource. The API enables to create, delete, and modify individual\n\n###### Compliant with TMF632_Party_Management_API_REST_Specification_R14.5.1\n",
    "version" : "1.0",
    "title" : "Party Management - Individual",
    "contact" : {
      "name" : "Amdocs Inc.",
      "url" : "http://www.amdocs.com",
      "email" : "support@amdocs.com"
    },
    "license" : {
      "name" : "Amdocs Inc.",
      "url" : "http://"
    },
    "x-amdocs" : {
      "service-principals" : [ "party-individual-app-id" ]
    },
    "x-dox-Updated" : "2017-11-16 17:49"
  },
  "host" : "example.com",
  "basePath" : "/partyManagement/v1",
  "schemes" : [ "https" ],
  "paths" : {
    "/individual" : {
      "get" : {
        "tags" : [ "Individual" ],
        "summary" : "Retrieve individuals based on given filters",
        "description" : "This operation provides an ability to filter individual based on different criteria.\n**Supported Filters&#58;**\n - relatedParty.id == '< value >'\n **Supported Sort&#58;**\n - none\n \nNote : Pagination is not supported by this operation\n",
        "operationId" : "searchIndividual",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "The locale of the client\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "salesChannel",
          "in" : "query",
          "description" : "Sales Channel.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "filters",
          "in" : "query",
          "description" : "Query parameter to specify the search filters. Attribute filters are specified in the following way:\n_?filters=([attributeName][operator][value],\\u2026,[value])[&|;]\\u2026[&|;]([attributeName][operator][value],\\u2026,[value])_\n\nSupported operators are:\n* Equality: == (equals), != (not equals)\n* Contains: =@ (contains), !@ (does not contain)\n* Less than: < (less than), <= (less than or equal to)\n* Greater than: > (greater than),  >= (greater than or equal to)\n* RegExp: =~ (match), !~ (does not match)\n\nComma separated values for an attribute are evaluated with OR operator. & is the separator for multiple queries to be evaluated with AND operator while the ; is the separator for multiple queries to be evaluated with OR operator.\n",
          "required" : false,
          "type" : "string",
          "x-dox-Since" : 1.0
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sort attributes\n",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "*OK* - Individual retrieved successfully.\n",
            "headers" : {
              "Etag" : {
                "type" : "string",
                "description" : "entity tag\n",
                "x-dox-Since" : 1
              }
            },
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Individual"
              }
            }
          },
          "400" : {
            "description" : "*Bad Request* -  The server cannot process the request due to malformed syntax. The response can be caused by missing mandatory query parameters, invalid value in the query parameters, validation exceptions, and so on.\n",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "409" : {
            "description" : "*Conflict* - The server cannot complete the request due to a conflict with the current state of the resource.\n",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "*Internal Server Error* - The server encountered an unexpected condition that prevented it from fulfilling the request.\n",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "502" : {
            "description" : "*Bad Gateway* - The server encountered an unexpected condition when calling another service.\n",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "503" : {
            "description" : "*Service Unavailable* - The server cannot fulfill the request due to a temporary overloading or maintenance of the server. Retry later.\n",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "x-amdocs" : {
          "public-roles" : [ "D1_PartyManagement_searchIndividual" ]
        }
      },
      "post" : {
        "tags" : [ "Individual" ],
        "summary" : "Create an individual",
        "description" : "This operation creates an individual\n###### TMF Open API compliant\n**Mandatory&#58;**\n  - givenName\n  - familyName\n  \n  At sub entity level following fields are mandatory\n  \n  - individualIdentification\n      - identificationId\n      - type\n      \n  - characteristic\n    - name\n    - value\n    \n  - externalReference\n     - type\n     - socialId\n     - userName\n  \n  - relatedParty\n     - id\n     - role\n  - contactMedium.type=\"email\"\n    - contactMedium.medium.type\n    - contactMedium.medium.emailAddress\n  - contactMedium.type=\"telephone\"\n    - medium.type\n    - medium.number\n  - contactMedium.type=\"postal address\" (configurable)\n    if address is provided as formatted address then following fields are mandatory\n    - medium.type\n    - medium.characteristic.type\n    - medium.street1\n    - medium.postCode\n    - medium.country\n    if address is provided as identifier then following fields are mandatory\n    - medium.type\n    - medium.characteristic.type\n    - medium.characteristic.place.id\n    - medium.characteristic.place.@referredType (GeographicAddress is supported)\n    \n - profilePicture\n    - id\n - InfluenceScore\n    - Score\n - otherName\n    - givenName\n    - familyName\n    - Third Level\n - Identification.Attachment\n    - id\n\n\n**Readonly&#58;**\n  - id\n  - href\n\n**Business rules&#58;**\n\n- Individual uniqueness\n  The uniquness of Individual is based on following fields\n  \n    - identification.identificationId and indentification.type\n    - externalReference.type and externalReference.socialId\n\n  This operation will not allow duplicate individual to be created based on the above criteria\n          \n**Reference value&#58;**\n  - contactMedium.type (PartyManagementRefData:contactMediumType)\n  - contactMedium.status (PartyManagementRefData:contactMediumStatus)\n  - externalReference.type (PartyManagementRefData:externalReferenceType)\n  - gender (PartyManagementRefData:gender)\n  - identification.type (PartyManagementRefData:identificationType)\n  - status (PartyManagementRefData:individualStatus)\n  - issuingAuthority (PartyManagementRefData:issuingAuthority)\n  - maritalStatus (PartyManagementRefData:maritalStatus)\n  - medium.type (PartyManagementRefData:mediumType)\n  - relatedParty.role (PartyManagementRefData:relatedPartyRole)\n  - relatedParty.type (PartyManagementRefData:relatedPartyType)\n  - residencyType (PartyManagementRefData:residencyType)\n  - title (PartyManagementRefData:title)          \n\n**Default behaviour&#58;**\n \n",
        "operationId" : "createIndividual",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "The locale of the client\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "salesChannel",
          "in" : "query",
          "description" : "Sales Channel.\n",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "Individual",
          "description" : "Individual details\n",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Individual"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "*Created* - Individual created successfully.\n",
            "examples" : {
              "application/json" : {
                "id" : "Individual_11540545-0401-402c-8800-88282a8808a9",
                "href" : "http://server:port/partyManagement/v1/individual/Individual_11540545-0401-402c-8800-88282a8808a9",
                "givenName" : "Prashant",
                "middleName" : "Sam",
                "familyName" : "David",
                "formattedName" : "Mr Prashant David",
                "fullName" : "Prashant Sam David",
                "preferredGivenName" : "JohnS",
                "birthDate" : "2010-08-16T13:10:55.829Z",
                "countryOfBirth" : "USA",
                "deathDate" : "2016-08-16T13:10:55.829Z",
                "gender" : "M",
                "location" : "http://gmail.com",
                "maritalStatus" : "single",
                "nationality" : "American",
                "placeOfBirth" : "Florida",
                "status" : "Active",
                "residencyType" : "Own",
                "title" : "Mr",
                "language" : "English",
                "personRank" : 0,
                "profileImageURL" : "dummy url",
                "contactMedium" : [ {
                  "id" : "Individual_11540545-0401-402c-8800-88282a8808a9_ContactMedium_00141151-4414-445c-a000-a080a0020a17",
                  "type" : "Email",
                  "preferred" : true,
                  "validFor" : {
                    "startDateTime" : "2017-08-16T13:10:55.829Z",
                    "endDateTime" : "2017-08-16T13:10:55.829Z"
                  },
                  "characteristic" : {
                    "type" : "Business",
                    "emailAddress" : "abcd@abcd.com",
                    "extensions" : { }
                  },
                  "extensions" : { }
                }, {
                  "id" : "Individual_11540545-0401-402c-8800-88282a8808a9_ContactMedium_04000040-0411-455e-82a8-0a20220a00b6",
                  "type" : "TelephoneNumber",
                  "preferred" : false,
                  "validFor" : {
                    "startDateTime" : "2017-08-16T13:10:55.829Z",
                    "endDateTime" : "2017-08-16T13:10:55.829Z"
                  },
                  "characteristic" : {
                    "type" : "Home",
                    "number" : "9096826671",
                    "extensions" : { }
                  },
                  "extensions" : { }
                } ],
                "relatedParty" : [ {
                  "id" : "string",
                  "href" : "http://server:port/partyManagement/v1/relatedParty/string",
                  "name" : "string",
                  "role" : "string",
                  "validFor" : {
                    "startDateTime" : "2017-08-16T13:10:55.829Z",
                    "endDateTime" : "2017-08-16T13:10:55.829Z"
                  }
                } ],
                "disability" : [ {
                  "id" : "Individual_11540545-0401-402c-8800-88282a8808a9_Disability_11550051-0041-4147-8202-a22a2aa808b7",
                  "disability" : "string",
                  "extensions" : { }
                } ],
                "identification" : [ {
                  "id" : "Individual_11540545-0401-402c-8800-88282a8808a9_IndividualIdentification_14111150-0155-411c-8020-2222a08202be",
                  "identificationId" : "strin1g",
                  "issuingDate" : "2017-08-16T13:10:55.829Z",
                  "validTill" : "2017-08-16T13:10:55.829Z",
                  "issuingAuthority" : "string",
                  "type" : "PAN",
                  "primary" : false,
                  "attachment" : [ ],
                  "extensions" : { }
                } ],
                "characteristic" : [ {
                  "name" : "string",
                  "value" : "string",
                  "extensions" : { }
                } ],
                "otherName" : [ {
                  "id" : "Individual_11540545-0401-402c-8800-88282a8808a9_OtherName_01010414-1011-4153-8280-a820082008bf",
                  "title" : "string",
                  "givenName" : "string",
                  "familyName" : "string",
                  "middleName" : "string",
                  "fullName" : "string string string",
                  "formattedName" : "string string string",
                  "validFor" : {
                    "startDateTime" : "2017-08-16T13:10:55.829Z",
                    "endDateTime" : "2017-08-16T13:10:55.829Z"
                  },
                  "extensions" : { }
                } ],
                "externalReference" : [ {
                  "type" : "facebook",
                  "href" : "string",
                  "id" : "Individual_11540545-0401-402c-8800-88282a8808a9_ExternalReference_15411550-0041-401e-8080-820aa88a0235",
                  "socialName" : "Prashant",
                  "socialId" : "prashant11",
                  "status" : "string",
                  "userName" : "prasan1t",
                  "characteristic" : [ ],
                  "extensions" : { }
                } ],
                "InfluenceScore" : [ ],
                "extensions" : { }
              }
            },
            "headers" : {
              "Etag" : {
                "type" : "string",
                "description" : "entity tag\n",
                "x-dox-Since" : 1
              }
            },
            "schema" : {
              "$ref" : "#/definitions/Individual"
            }
          },
          "400" : {
            "description" : "*Bad Request* -  The server cannot process the request due to malformed syntax. The response can be caused by missing mandatory query parameters, invalid value in the query parameters, validation exceptions, and so on.\n",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "409" : {
            "description" : "*Conflict* - The server cannot complete the request due to a conflict with the current state of the resource.\n",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "*Internal Server Error* - The server encountered an unexpected condition that prevented it from fulfilling the request.\n",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "502" : {
            "description" : "*Bad Gateway* - The server encountered an unexpected condition when calling another service.\n",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "503" : {
            "description" : "*Service Unavailable* - The server cannot fulfill the request due to a temporary overloading or maintenance of the server. Retry later.\n",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "x-amdocs" : {
          "public-roles" : [ "D1_PartyManagement_createIndividual" ]
        }
      }
    },
    "/individual/{individualId}" : {
      "get" : {
        "tags" : [ "Individual" ],
        "summary" : "Retrieve an individual",
        "description" : "This operation retrieves an individual\n",
        "operationId" : "getIndividual",
        "parameters" : [ {
          "name" : "individualId",
          "in" : "path",
          "description" : "Individual ID",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "The locale of the client\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "additionalAttributes",
          "in" : "query",
          "description" : "Check Completeness of individual on basis of configured decisions",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "salesChannel",
          "in" : "query",
          "description" : "Sales Channel.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "The subset of attributes which are expected in the response.\n",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "*OK* - The individual was retrieved successfully.\n",
            "headers" : {
              "Etag" : {
                "type" : "string",
                "description" : "entity tag\n",
                "x-dox-Since" : 1
              }
            },
            "schema" : {
              "$ref" : "#/definitions/Individual"
            }
          },
          "400" : {
            "description" : "*Bad Request* -  The server cannot process the request due to malformed syntax. The response can be caused by missing mandatory query parameters, invalid value in the query parameters, validation exceptions, and so on.\n",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "*Not Found* - The server did not find anything matching the request URI. The response can be caused by missing path parameters, invalid WEB resource, and so on.\n",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "405" : {
            "description" : "*Method Not Allowed* - Indicates method (GET/PUT/POST etc.) is not supported for the resource.\n",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "409" : {
            "description" : "*Conflict* - The server cannot complete the request due to a conflict with the current state of the resource.\n",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "*Internal Server Error* - The server encountered an unexpected condition that prevented it from fulfilling the request.\n",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "502" : {
            "description" : "*Bad Gateway* - The server encountered an unexpected condition when calling another service.\n",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "503" : {
            "description" : "*Service Unavailable* - The server cannot fulfill the request due to a temporary overloading or maintenance of the server. Retry later.\n",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "x-amdocs" : {
          "public-roles" : [ "D1_PartyManagement_getIndividual" ]
        }
      },
      "patch" : {
        "tags" : [ "Individual" ],
        "summary" : "Patch an indvidual",
        "description" : "This operation allows partial update to individual resource.\n\n**Patchable elements&#58;**\n- middleName                 ( replace,remove )\n- familyName              ( replace,remove )\n- preferredGivenName ( replace,remove )\n- birthDate                      ( replace,remove )\n- countryOfBirth  ( replace,remove )\n- deathDate          ( replace,remove )\n- gender ( replace,remove )\n- location                ( replace,remove )\n- maritalStatus     ( replace,remove )\n- nationality           ( replace,remove )\n- placeOfBirth       ( replace,remove )\n- status    ( replace,remove )\n- residencyType  ( replace,remove )\n- title        ( replace,remove )\n- language              ( replace,remove )\n- personRank        ( replace,remove )\n- profileImageURL              ( replace,remove )\n- characteristic     (add, replace,remove )\n- characteristic (name,replace,remove )\n- characteristic.value         ( replace,remove )\n- contactMedium (add,replace,remove )\n- contactMedium.preferred           ( replace,remove )\n- contactMedium.validFor              ( replace,remove )\n- contactMedium.validFor.startDateTime ( replace,remove )\n- contactMedium.validFor.endDateTime  ( replace,remove )\n- contactMedium.characteristic    ( replace,remove )\n- contactMedium.characteristic.emailAddress       ( replace,remove )\n- contactMedium.characteristic.number  ( replace,remove )\n- contactMedium.characteristic.city           ( replace,remove )\n- contactMedium.characteristic.country   ( replace,remove )\n- contactMedium.characteristic.postCode ( replace,remove )\n- contactMedium.characteristic.stateOrProvince  ( replace,remove )\n- contactMedium.characteristic.street1    ( replace,remove )\n- contactMedium.characteristic.street2    ( replace,remove )\n- externalReference.characteristic               (add,replace, remove )\n- externalReference          (add, replace, remove )\n- externalReference.socialName  ( replace,remove )\n- externalReference.avatar             ( replace,remove )\n- identification     ( add,replace, remove )\n- identification.primary    ( replace,remove )\n- identification.issuingAuthority   ( replace,remove )\n- identification.validTill     ( replace,remove )\n- identification.attachment            (add, replace, remove )\n- relatedParty       ( add, replace, remove )\n",
        "operationId" : "patchIndividual",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "individualId",
          "in" : "path",
          "description" : "Individual ID",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "The locale of the client\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "The If-Match HTTP request header makes the request conditional. \nFor GET and HEAD methods, the server will send back the requested resource only if it matches one of the listed ETags. \nFor PUT and other non-safe methods, it will only upload the resource in this case\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "salesChannel",
          "in" : "query",
          "description" : "Sales Channel.\n",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "IndividualPatch",
          "description" : "Patch request to update Individual resource\n",
          "required" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/PatchElement"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "*OK* - Individual updated successfully.\n",
            "headers" : {
              "Etag" : {
                "type" : "string",
                "description" : "entity tag\n",
                "x-dox-Since" : 1
              }
            },
            "schema" : {
              "$ref" : "#/definitions/Individual"
            }
          },
          "400" : {
            "description" : "*Bad Request* -  The server cannot process the request due to malformed syntax. The response can be caused by missing mandatory query parameters, invalid value in the query parameters, validation exceptions, and so on.\n",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "*Not Found* - The server did not find anything matching the request URI. The response can be caused by missing path parameters, invalid WEB resource, and so on.\n",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "409" : {
            "description" : "*Conflict* - The server cannot complete the request due to a conflict with the current state of the resource.\n",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "422" : {
            "description" : "*Conflict* - The request could not be completed due to a wrong field name,\nlist index or unmatching condition in patch query param.\n",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "*Internal Server Error* - The server encountered an unexpected condition that prevented it from fulfilling the request.\n",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "502" : {
            "description" : "*Bad Gateway* - The server encountered an unexpected condition when calling another service.\n",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "x-amdocs" : {
          "public-roles" : [ "D1_PartyManagement_patchIndividual" ]
        }
      }
    },
    "/individual/{individualId}/postalAddress" : {
      "get" : {
        "tags" : [ "Individual" ],
        "summary" : "Retrieve postal addresses of individual",
        "description" : "This operation retrieves individual addresses based on the provided filter values.  \n\n**Mandatory&#58;**\n- individualId  - unique identifier of the individual      \n\n**Supported Filters &#58;**\n\naddressRole==<value>  -   Represents role of address. Following are fixed set of values which are supported.\n  such as invoice,mailing,service,shipping.\ntype  == <value> - address type such as Home/Work etc. ( Either type or role can be give at a time )\nplace.@referredType == <value>  - PlaceRef.@referredType to search for within the individual\nplace.id == <value> - The value of PlaceRef.id to search for within the individual\nplace.subPlace.id == <value> - The value of SubPlaceRef.id to search for within the individual\nplace.subPlace.@referredType == <value> - The value of SubPlaceRef.@referredType to search for within the individual\n \n**Business rules&#58;**\n  - Operation will iterate over individual entity in order to filter the postal addresses. The related entities such as FA/BA are not traversed for filtering.\n  - The rules for matching address type are driven by ** AddressManagementRefData:addressRole **  reference list. For example if 'Home' address is configured to be allowed as 'Service' address then filter such as 'addressRole=Service' would include the 'Home' address in response.\n    The address role reference list contains the configuration information.\n  \n\n**Reference Data values&#58;**\n- place.@referredType  (Configuration:allowedPlaceRefReferredType)\n- place.subPlace.@referredType(Configuration:allowedSubPlaceRefReferredType)\n\n**Default behaviour&#58;**\n- If filter attributes are not provided then operation will return all the postal addresses of the individual.\n",
        "operationId" : "retrieveCustomerAddress",
        "parameters" : [ {
          "name" : "individualId",
          "in" : "path",
          "description" : "Individual ID",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "filters",
          "in" : "query",
          "description" : "Query parameter to specify the search filters. Attribute filters are specified in the following way:\n_?filters=([attributeName][operator][value],\\u2026,[value])[&|;]\\u2026[&|;]([attributeName][operator][value],\\u2026,[value])_\n\nSupported operators are:\n* Equality: == (equals), != (not equals)\n* Contains: =@ (contains), !@ (does not contain)\n* Less than: < (less than), <= (less than or equal to)\n* Greater than: > (greater than),  >= (greater than or equal to)\n* RegExp: =~ (match), !~ (does not match)\n\nComma separated values for an attribute are evaluated with OR operator. & is the separator for multiple queries to be evaluated with AND operator while the ; is the separator for multiple queries to be evaluated with OR operator.\n",
          "required" : false,
          "type" : "string",
          "x-dox-Since" : 1.0
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "The locale of the client\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "salesChannel",
          "in" : "query",
          "description" : "Sales Channel.\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "*OK* - The individual addresses were retrieved successfully.\n",
            "headers" : {
              "Etag" : {
                "type" : "string",
                "description" : "entity tag\n",
                "x-dox-Since" : 1
              }
            },
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/MediumCharacteristic"
              }
            }
          },
          "400" : {
            "description" : "*Bad Request* - The server cannot process the request due to a malformed syntax. The response can be caused by missing mandatory query parameters, invalid value in the query parameters, validation exceptions, and so on.\n",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "409" : {
            "description" : "*Conflict* - The server cannot complete the request due to a conflict with the current state of the resource.\n",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "422" : {
            "description" : "*Unprocessable Entity* - The server understands the content type of the request entity, and the syntax of the request entity is correct, but was unable to process the contained instructions.\n",
            "schema" : {
              "$ref" : "#/definitions/ValidationError"
            }
          },
          "500" : {
            "description" : "*Internal Server Error* - The server encountered an unexpected condition that prevented it from fulfilling the request.\n",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "502" : {
            "description" : "*Bad Gateway* - The server encountered an unexpected condition when calling another service.\n",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "default" : {
            "description" : "*Internal Server Error* - The server encountered an unexpected condition that prevented it from fulfilling the request.\n",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "x-amdocs" : {
          "public-roles" : [ "D1_PartyManagement_getIndividual" ]
        }
      }
    },
    "/individual/{individualId}/addPostalAddress" : {
      "post" : {
        "tags" : [ "Individual" ],
        "summary" : "Associate an address to individual",
        "description" : "This operation associates a postal address to individual with given role. \n\n**Mandatory&#58;**\n  if address is provided as formatted address then following fields are mandatory\n    - type\n    - street1\n    - postCode\n    - country\n  if address is provided as identifier then following fields are mandatory\n    - type\n    - place.id\n    - place.@referredType (GeographicAddress is supported)\n    \n**Business rules&#58;**\n\n- The operation will validate the place.id, place.subplace.id\n\n- Operation will support values for some of the attributes as below \n    place.@referredType='GeographicAddress'\n    place.subPlace.@referredType='GeographicSubAddress'\n\n- The operation is idempotent and will result no change to Individual resource in case the address already exist on the individual with given type\n\n- The operation will use the place.id and subplace.id for conversion from geographic address to formatted address.\n\n**Reference value&#58;**\n\n - type - PartyManagementRefData:postalAddress\n",
        "operationId" : "addPostalAddress",
        "parameters" : [ {
          "name" : "individualId",
          "in" : "path",
          "description" : "Individual ID",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "The locale of the client\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "The If-Match HTTP request header makes the request conditional. \nFor GET and HEAD methods, the server will send back the requested resource only if it matches one of the listed ETags. \nFor PUT and other non-safe methods, it will only upload the resource in this case\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "salesChannel",
          "in" : "query",
          "description" : "Sales Channel.\n",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "Medium",
          "description" : "Individual with added contact medium details\n",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/MediumCharacteristic"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "*OK* - The address is associated with Individual successfully.\n",
            "headers" : {
              "Etag" : {
                "type" : "string",
                "description" : "entity tag\n",
                "x-dox-Since" : 1
              }
            },
            "schema" : {
              "$ref" : "#/definitions/Individual"
            }
          },
          "400" : {
            "description" : "*Bad Request* - The server cannot process the request due to a malformed syntax. The response can be caused by missing mandatory query parameters, invalid value in the query parameters, validation exceptions, and so on.\n",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "409" : {
            "description" : "*Conflict* - The server cannot complete the request due to a conflict with the current state of the resource.\n",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "422" : {
            "description" : "*Unprocessable Entity* - The server understands the content type of the request entity, and the syntax of the request entity is correct, but was unable to process the contained instructions.\n",
            "schema" : {
              "$ref" : "#/definitions/ValidationError"
            }
          },
          "500" : {
            "description" : "*Internal Server Error* - The server encountered an unexpected condition that prevented it from fulfilling the request.\n",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "502" : {
            "description" : "*Bad Gateway* - The server encountered an unexpected condition when calling another service.\n",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "default" : {
            "description" : "*Internal Server Error* - The server encountered an unexpected condition that prevented it from fulfilling the request.\n",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "x-amdocs" : {
          "public-roles" : [ "D1P_PartyManagement_addPostalAddress" ]
        }
      }
    }
  },
  "definitions" : {
    "Individual" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Unique identifier of Individual\n"
        },
        "href" : {
          "type" : "string",
          "description" : "Hypertext reference to the individual.\n"
        },
        "givenName" : {
          "type" : "string",
          "description" : "First name of the individual\n",
          "x-dox-pii" : "nameInfo:name"
        },
        "middleName" : {
          "type" : "string",
          "description" : "Middle name of the individual\n",
          "x-dox-pii" : "nameInfo:name"
        },
        "familyName" : {
          "type" : "string",
          "description" : "Family name of the individual\n",
          "x-dox-pii" : "nameInfo:name"
        },
        "formattedName" : {
          "type" : "string",
          "description" : "A formatted name useful for specific contexts for example Chinese,Japanese,Korean\n",
          "x-dox-pii" : "nameInfo:name"
        },
        "fullName" : {
          "type" : "string",
          "description" : "Full Name flatten (first,middle and last name flatten)\n",
          "x-dox-pii" : "nameInfo:name"
        },
        "preferredGivenName" : {
          "type" : "string",
          "description" : "name preferred by individual\n",
          "x-dox-pii" : "nameInfo:name"
        },
        "birthDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date of birth of individual\n",
          "x-dox-pii" : "vitalInfo:date"
        },
        "countryOfBirth" : {
          "type" : "string",
          "description" : "Country of birth of individual\n",
          "x-dox-pii" : "vitalInfo:placeOfBirth"
        },
        "deathDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date of death of individual\n",
          "x-dox-pii" : "vitalInfo:date"
        },
        "gender" : {
          "type" : "string",
          "description" : "Gender of the individual         \n",
          "x-dox-pii" : "vitalInfo:gender"
        },
        "location" : {
          "type" : "string",
          "description" : "Temporary current location of the individual (may be used if the individual has approved its sharing)\n"
        },
        "maritalStatus" : {
          "type" : "string",
          "description" : "Marital status of the individual ( Married,divorced etc.) \n",
          "x-dox-pii" : "vitalInfo:maritalStatus"
        },
        "nationality" : {
          "type" : "string",
          "description" : "Nationality of the individual.\n",
          "x-dox-pii" : "nationalityInfo:nationality"
        },
        "placeOfBirth" : {
          "type" : "string",
          "description" : "Place of the birth of the individual\n",
          "x-dox-pii" : "vitalInfo:placeOfBirth"
        },
        "status" : {
          "type" : "string",
          "description" : "Status of the individual (for example active/inactive/obsolete and so on)\n"
        },
        "residencyType" : {
          "type" : "string",
          "description" : "Type of residency such as rent,own\n",
          "x-dox-pii" : "contactInfo:residencyType"
        },
        "title" : {
          "type" : "string",
          "description" : "Used for title like Pr,Dr,Sir etc.\n",
          "x-dox-pii" : "contactInfo:title"
        },
        "language" : {
          "type" : "string",
          "description" : "Primary language of the individual\n",
          "x-dox-pii" : "contactInfo:language"
        },
        "personRank" : {
          "type" : "integer",
          "description" : "Degree of importance of the person to the service provider.\n"
        },
        "profileImageURL" : {
          "type" : "string",
          "description" : "Published url for profile picture of Individual\n"
        },
        "contactMedium" : {
          "type" : "array",
          "description" : "Associated Contact Mediums to individual\n",
          "items" : {
            "$ref" : "#/definitions/ContactMedium"
          }
        },
        "relatedParty" : {
          "type" : "array",
          "description" : "Party/PartyRole associated with individual\n",
          "items" : {
            "$ref" : "#/definitions/RelatedPartyRef"
          }
        },
        "identification" : {
          "type" : "array",
          "description" : "Represents our registration of information used as proof of identity by an individual (Passport/national identity card/SSN etc.)\n",
          "items" : {
            "$ref" : "#/definitions/IndividualIdentification"
          }
        },
        "characteristic" : {
          "type" : "array",
          "description" : "Describes the characteristics of individual such as individual hobbies,center of interest etc. Apart from storage and retrieval no operations such as filtering,sorting etc. will be supported.\nNo sensitive infomration should be stored in this attribute.\n",
          "items" : {
            "$ref" : "#/definitions/Characteristics"
          }
        },
        "otherName" : {
          "type" : "array",
          "description" : "To keep track of other names for e.g old name of a woman before marriage , an artist name and so on\n",
          "items" : {
            "$ref" : "#/definitions/OtherName"
          }
        },
        "externalReference" : {
          "type" : "array",
          "description" : "To manage touch points external OTT identifiers for person (facebook,google+ etc.)\n",
          "items" : {
            "$ref" : "#/definitions/ExternalReference"
          }
        },
        "profilePicture" : {
          "$ref" : "#/definitions/AttachmentRef"
        },
        "InfluenceScore" : {
          "type" : "array",
          "description" : "Social influence score of an individual\n",
          "items" : {
            "$ref" : "#/definitions/InfluenceScore"
          }
        },
        "additionalAttributes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/additionalAttribute"
          }
        },
        "extensions" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object",
            "properties" : { }
          },
          "x-amdocs" : {
            "refDefinition" : "IndividualExtension"
          }
        }
      },
      "description" : "Individual resource\n"
    },
    "ExternalReference" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string",
          "description" : "The name of the external system or social channel. eg. facebook, twitter, etc.\n",
          "x-dox-pii" : "socialInfo:channel"
        },
        "href" : {
          "type" : "string",
          "description" : "Hypertext reference to the user image\n"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier of external reference\n"
        },
        "avatar" : {
          "type" : "string",
          "description" : "The URL of the social user image\n",
          "x-dox-pii" : "socialInfo:identity"
        },
        "socialName" : {
          "type" : "string",
          "description" : "The displayable name of the social channel account\n",
          "x-dox-pii" : "socialInfo:identity"
        },
        "socialId" : {
          "type" : "string",
          "description" : "The internal identifier from the social channel account\n",
          "x-dox-pii" : "socialInfo:identity"
        },
        "status" : {
          "type" : "string",
          "description" : "Status of social profile such as pending, verified, obsolete and so on\n"
        },
        "userName" : {
          "type" : "string",
          "description" : "The login name of the social channel account\n",
          "x-dox-pii" : "socialInfo:identity"
        },
        "characteristic" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Characteristics"
          }
        },
        "extensions" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object",
            "properties" : { }
          },
          "x-amdocs" : {
            "refDefinition" : "ExternalReferenceExtension"
          }
        }
      },
      "description" : "To manage touch points external OTT identifiers for person (facebook,google+ etc.)\n"
    },
    "InfluenceScore" : {
      "type" : "object",
      "properties" : {
        "provider" : {
          "type" : "string",
          "description" : "Name of the social analytics score provider; e.g. Klout\n",
          "x-dox-pii" : "socialInfo:provider"
        },
        "score" : {
          "type" : "integer",
          "description" : "Score of an individual as calculated by the provider\n",
          "x-dox-pii" : "socialInfo:identity"
        },
        "extensions" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object",
            "properties" : { }
          },
          "x-amdocs" : {
            "refDefinition" : "InfluenceScoreExtension"
          }
        }
      },
      "description" : "Represents a social influence score of an individual\n"
    },
    "OtherName" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Unique identifier , auto-generated\n"
        },
        "title" : {
          "type" : "string",
          "description" : "Used for title like Pr,Dr,Sir etc\n",
          "x-dox-pii" : "contactInfo:title"
        },
        "givenName" : {
          "type" : "string",
          "description" : "First name of the individual\n",
          "x-dox-pii" : "nameInfo:name"
        },
        "familyName" : {
          "type" : "string",
          "description" : "Family Name\n",
          "x-dox-pii" : "nameInfo:name"
        },
        "middleName" : {
          "type" : "string",
          "description" : "Middle names\n",
          "x-dox-pii" : "nameInfo:name"
        },
        "fullName" : {
          "type" : "string",
          "description" : "Full Name flatten (first,middle and last name flatten)\n",
          "x-dox-pii" : "nameInfo:name"
        },
        "formattedName" : {
          "type" : "string",
          "description" : "A formatted name useful for specific contexts (Chinese,Japanese,Korean)\n",
          "x-dox-pii" : "nameInfo:name"
        },
        "validFor" : {
          "$ref" : "#/definitions/TimePeriod"
        },
        "extensions" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object",
            "properties" : { }
          },
          "x-amdocs" : {
            "refDefinition" : "OtherNameExtension"
          }
        }
      },
      "description" : "To keep track of other names for e.g old name of a woman before marriage , an artist name etc.\n"
    },
    "Characteristics" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "name of the characterstic\n"
        },
        "value" : {
          "type" : "string",
          "description" : "value of the chracteristic\n"
        }
      },
      "description" : "Describes the characteristics of customer such as customer hobbies,center of interest etc.\nIt's recommended not to store any senstive information (such as PII) to be persisted here.\n"
    },
    "IndividualIdentification" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Unique identifier of the indentification\n"
        },
        "identificationId" : {
          "type" : "string",
          "description" : "Identification value like actual SSN , passport number and so on.\n",
          "x-dox-pii" : "governmentIdentityInfo:identification"
        },
        "issuingDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Issuing date of identification\n",
          "x-dox-pii" : "governmentIdentityInfo:date"
        },
        "validTill" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Expiry/Validity for date of indentification \n",
          "x-dox-pii" : "governmentIdentityInfo:date"
        },
        "issuingAuthority" : {
          "type" : "string",
          "description" : "Issuing authority like state, federal etc.\n",
          "x-dox-pii" : "governmentIdentityInfo:authority"
        },
        "type" : {
          "type" : "string",
          "description" : "Type of identification like SSN,Passport etc.\n",
          "x-dox-pii" : "governmentIdentityInfo:type"
        },
        "primary" : {
          "type" : "boolean",
          "description" : "Indicates whether this identification is primary among several ones\n"
        },
        "attachment" : {
          "type" : "array",
          "description" : "Manages attachments of an individual identification\n",
          "items" : {
            "$ref" : "#/definitions/AttachmentRef"
          }
        },
        "extensions" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object",
            "properties" : { }
          },
          "x-amdocs" : {
            "refDefinition" : "IndividualIdentificationExtension"
          }
        }
      },
      "description" : "Represents our registration of information used as proof of identity by an individual (Passport/national identity card/SSN etc.).\nThe uniqueness of Individual is decided based on identificationId and type.\n"
    },
    "Disability" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Unique identifier of the disability \n"
        },
        "disability" : {
          "type" : "string",
          "description" : "physical or mental handicap.\n",
          "x-dox-pii" : "healthInfo:disability"
        },
        "extensions" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object",
            "properties" : { }
          },
          "x-amdocs" : {
            "refDefinition" : "DisabilityExtension"
          }
        }
      }
    },
    "additionalAttribute" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "name of the expression evaluated\n"
        },
        "value" : {
          "type" : "string",
          "description" : "Value of the expression evaluated\n"
        }
      },
      "description" : "Describes the expression evaluation  of individual such as individual name,hasPhone No etc.\n"
    },
    "ErrorResponse" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "The code associated with the error\n"
        },
        "message" : {
          "type" : "string",
          "description" : "The message associated with the error"
        },
        "traceId" : {
          "type" : "string",
          "description" : "A unique trace identifier used to correlate an error returned to a client with the server\n"
        }
      },
      "description" : "Response containing descriptive error text, error code\ntype: object\n"
    },
    "PatchElement" : {
      "properties" : {
        "op" : {
          "type" : "string",
          "description" : "The operation associated with this patched resource part. Valid values are 'add' or 'remove' or 'replace'.\n"
        },
        "path" : {
          "type" : "string",
          "description" : "The path of this resource part within the patched resource. For example, '/note' or '/name' or '/orderItem/quantity'.\n"
        },
        "value" : {
          "type" : "object",
          "description" : "The value of the patched resource part\n",
          "properties" : { }
        }
      },
      "description" : "The patched resource part\n"
    },
    "RelatedPartyRef" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Unique id of an existing party.\n"
        },
        "href" : {
          "type" : "string",
          "description" : "The self href for the existing related party.\n"
        },
        "name" : {
          "type" : "string",
          "description" : "The name of related party.\n",
          "x-dox-pii" : "nameInfo:name"
        },
        "role" : {
          "type" : "string",
          "description" : "The role of related party\n"
        },
        "type" : {
          "type" : "string",
          "description" : "Describes if it's Customer/Individual/Organazation\nPatchable - No\n"
        },
        "validFor" : {
          "$ref" : "#/definitions/TimePeriod"
        }
      },
      "description" : "Contains reference to the related party.\n"
    },
    "TimePeriod" : {
      "type" : "object",
      "properties" : {
        "startDateTime" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The time period start date and time.\n"
        },
        "endDateTime" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The time period end date and time.\n"
        },
        "extension" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object",
            "properties" : { }
          },
          "x-amdocs" : {
            "refDefinition" : "TimePeriodExtension"
          }
        }
      },
      "description" : "Time period\n"
    },
    "MediumCharacteristic" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string",
          "description" : "Type of medium (fax, mobile phone...).\n"
        },
        "emailAddress" : {
          "type" : "string",
          "description" : "The contact's email address for the ContactMedium type of email.\n",
          "x-dox-pii" : "contactInfo:email"
        },
        "number" : {
          "type" : "string",
          "description" : "The contact's phone number for Contact Medium type telephone number.\n",
          "x-dox-pii" : "contactInfo:telephoneNumber"
        },
        "city" : {
          "type" : "string",
          "description" : "The city name for the contact's address for Contact Medium type postal address.\n",
          "x-dox-pii" : "contactInfo:city"
        },
        "country" : {
          "type" : "string",
          "description" : "The country ISO code for the contact's address for Contact Medium type postal address.\n",
          "x-dox-pii" : "contactInfo:country"
        },
        "postCode" : {
          "type" : "string",
          "description" : "The postcode for the contact's address for Contact Medium type postal address.\n",
          "x-dox-pii" : "contactInfo:postCode"
        },
        "stateOrProvince" : {
          "type" : "string",
          "description" : "The state or province from contact's address for Contact Medium type postal address.\n",
          "x-dox-pii" : "contactInfo:state"
        },
        "street1" : {
          "type" : "string",
          "description" : "The first street line for the contact's address for Contact Medium type postal address.\n",
          "x-dox-pii" : "contactInfo:addressLine"
        },
        "street2" : {
          "type" : "string",
          "description" : "The second street line for the contact's address for Contact Medium type postal address.\n",
          "x-dox-pii" : "contactInfo:addressLine"
        },
        "place" : {
          "$ref" : "#/definitions/PlaceRef"
        },
        "extensions" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object",
            "properties" : { }
          },
          "x-amdocs" : {
            "refDefinition" : "MediumCharacteristicExtension"
          }
        }
      },
      "description" : "Medium information for customer(e.g. email address, mobile number,fax number). \n"
    },
    "PlaceRef" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Unique identifier of GeographicAddress,GeographicSite or GeographicLocation\n"
        },
        "@referredType" : {
          "type" : "string",
          "description" : "Describes the type of entity such as GeographicAddress, GeographicSite or GeographicLocation\n"
        },
        "@type" : {
          "type" : "string",
          "description" : "Describes the type of entity \n"
        },
        "subPlace" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SubPlaceRef"
          }
        }
      },
      "description" : "A place reference is a pointer to either GeographicAddress,GeographicSubAddress,GeographicLocation\n"
    },
    "SubPlaceRef" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Unique identifier of entity such as GeographicSubAddress\n"
        },
        "@referredType" : {
          "type" : "string",
          "description" : "Describes the type of entity such as GeographicSubAddress \n"
        },
        "@type" : {
          "type" : "string",
          "description" : "Describes the type of entity \n"
        }
      },
      "description" : "A subplace reference is a pointer to GeographicSubAddress\n"
    },
    "Error" : {
      "type" : "object",
      "required" : [ "code", "reason" ],
      "discriminator" : "@type",
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "Error code relevant to an application, defined in the API or in a common list\n"
        },
        "reason" : {
          "type" : "string",
          "description" : "Explanation of the reason for the error that can be displayed to a user\n"
        },
        "message" : {
          "type" : "string",
          "description" : "Additional information about the error  and corrective actions related to the error that can be displayed to a user\n"
        },
        "status" : {
          "type" : "string",
          "description" : "HTTP error code extension\n"
        },
        "referenceError" : {
          "type" : "string",
          "format" : "uri",
          "description" : "URI of the documentation describing the error\n"
        },
        "traceId" : {
          "type" : "string",
          "description" : "Unique tracker ID that is used to facilitate the troubleshooting\n"
        },
        "@type" : {
          "type" : "string",
          "description" : "Type of the error\n"
        },
        "characteristic" : {
          "type" : "array",
          "description" : "Charachteristic parameters that are associated with the error\n",
          "items" : {
            "$ref" : "#/definitions/ErrorCharacteristic"
          }
        }
      },
      "description" : "Error response. This object is used when an API throws an error, typically with a HTTP error response codes 3xx, 4xx, and 5xx\n"
    },
    "ErrorCharacteristic" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "Non-localized name identifier of the characteristic\n"
        },
        "value" : {
          "type" : "string",
          "description" : "Value of the characteristic\n"
        }
      },
      "description" : "Parameter that is associated with the error entity\n"
    },
    "ValidationError" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Error"
      }, {
        "properties" : {
          "validationMessage" : {
            "type" : "array",
            "description" : "The validation messages\n",
            "items" : {
              "$ref" : "#/definitions/ValidationMessage"
            }
          }
        }
      } ],
      "description" : "Validation error object that is used when an API throws an error, typically with a HTTP error response code 422\n"
    },
    "ValidationMessage" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Non-localized name identifier of the validation message\n"
        },
        "text" : {
          "type" : "string",
          "description" : "Localized descriptive validation message\n"
        },
        "type" : {
          "type" : "string",
          "description" : "Type of the validation message\n"
        },
        "subtype" : {
          "type" : "string",
          "description" : "Distinct code which represents the issue\n"
        },
        "parameter" : {
          "type" : "array",
          "description" : "Name/value pair of the validation message\n",
          "items" : {
            "$ref" : "#/definitions/ValidationMessageParameter"
          }
        },
        "severity" : {
          "type" : "string",
          "description" : "Severity of the validation message\n"
        },
        "path" : {
          "type" : "string",
          "description" : "Path to the resource part to which the validation message is related\n"
        },
        "resource" : {
          "type" : "array",
          "description" : "Resource that is associated with the message\n",
          "items" : {
            "$ref" : "#/definitions/RelatedResource"
          }
        }
      },
      "description" : "Message associated with the validation failure\n"
    },
    "ValidationMessageParameter" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "Name of the parameter\n"
        },
        "value" : {
          "type" : "array",
          "description" : "Value of the parameter\n",
          "items" : {
            "type" : "string"
          }
        }
      },
      "description" : "Name/value pair of the validation message parameter\n"
    },
    "RelatedResource" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string",
          "description" : "Type of the resource\n"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier of the resource\n"
        },
        "variable" : {
          "type" : "array",
          "description" : "Variables related to the resource\n",
          "items" : {
            "$ref" : "#/definitions/Variable"
          }
        },
        "containedResource" : {
          "type" : "array",
          "description" : "Other resources, specs, or offers that are linked to the message but did not trigger the validation message\n",
          "items" : {
            "$ref" : "#/definitions/ContainedResource"
          }
        }
      },
      "description" : "Resource that is associated with the validation message (that is, triggered the validation failure)\n"
    },
    "Variable" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string",
          "description" : "Type of the variable\n"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier of the variable\n"
        },
        "value" : {
          "type" : "array",
          "description" : "Value(s) of the variable\n",
          "items" : {
            "type" : "string"
          }
        }
      },
      "description" : "Variable that is associated with a resource\n"
    },
    "ContainedResource" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string",
          "description" : "Type of the resource\n"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier of the resource\n"
        },
        "variable" : {
          "type" : "array",
          "description" : "Variables that are related to the resource\n",
          "items" : {
            "$ref" : "#/definitions/Variable"
          }
        }
      },
      "description" : "Resources that are contained in the validation message\n"
    },
    "ContactMedium" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Unique , auto-generated identifier\n"
        },
        "type" : {
          "type" : "string",
          "description" : "Contact medium type like email address, telephone number, postal address.\n"
        },
        "preferred" : {
          "type" : "boolean",
          "description" : "Indicator for preferred contact medium for communication\n"
        },
        "validFor" : {
          "$ref" : "#/definitions/TimePeriod"
        },
        "characteristic" : {
          "$ref" : "#/definitions/MediumCharacteristic"
        },
        "extensions" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object",
            "properties" : { }
          },
          "x-amdocs" : {
            "refDefinition" : "ContactMediumExtension"
          }
        }
      },
      "description" : "Contact medium associated to the customer (e.g. email address, telephone number etc). \n"
    },
    "AttachmentRef" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Unique, auto-generated identifier of the associated attachment\n"
        },
        "href" : {
          "type" : "string",
          "description" : "The HREF of the attachmetn\n"
        },
        "name" : {
          "type" : "string",
          "description" : "The name of the attachment. Optional.\n"
        },
        "url" : {
          "type" : "string",
          "description" : "URL for an attachement\n"
        }
      },
      "description" : "Represents a reference to the associated attachment\n"
    }
  },
  "parameters" : {
    "header-locale" : {
      "name" : "Accept-Language",
      "in" : "header",
      "description" : "client's locale\n",
      "required" : false,
      "type" : "string"
    },
    "header-if-match" : {
      "name" : "If-Match",
      "in" : "header",
      "description" : "entity tag for version of resource to update\n",
      "required" : false,
      "type" : "string",
      "x-dox-Since" : "v10.2"
    },
    "query-salesChannel" : {
      "name" : "salesChannel",
      "in" : "query",
      "description" : "Sales Channel.\n",
      "required" : false,
      "type" : "string"
    },
    "query-filters" : {
      "name" : "filters",
      "in" : "query",
      "description" : "Filter criteria for query.Supported attribute Customer with operator '=='.\n",
      "required" : false,
      "type" : "string"
    },
    "query-sort" : {
      "name" : "sort",
      "in" : "query",
      "description" : "Sort attribute. Currently not supported\n",
      "required" : false,
      "type" : "array",
      "items" : {
        "type" : "string"
      },
      "collectionFormat" : "multi"
    }
  },
  "responses" : {
    "400-BadRequest" : {
      "description" : "*Bad Request* -  The server cannot process the request due to malformed syntax. The response can be caused by missing mandatory query parameters, invalid value in the query parameters, validation exceptions, and so on.\n",
      "schema" : {
        "$ref" : "#/definitions/ErrorResponse"
      }
    },
    "404-NotFound" : {
      "description" : "*Not Found* - The server did not find anything matching the request URI. The response can be caused by missing path parameters, invalid WEB resource, and so on.\n",
      "schema" : {
        "$ref" : "#/definitions/ErrorResponse"
      }
    },
    "405-MethodNotAllowed" : {
      "description" : "*Method Not Allowed* - Indicates method (GET/PUT/POST etc.) is not supported for the resource.\n",
      "schema" : {
        "$ref" : "#/definitions/ErrorResponse"
      }
    },
    "409-Conflict" : {
      "description" : "*Conflict* - The server cannot complete the request due to a conflict with the current state of the resource.\n",
      "schema" : {
        "$ref" : "#/definitions/ErrorResponse"
      }
    },
    "422-UnProcessableRequest" : {
      "description" : "*Conflict* - The request could not be completed due to a wrong field name,\nlist index or unmatching condition in patch query param.\n",
      "schema" : {
        "$ref" : "#/definitions/ErrorResponse"
      }
    },
    "500-InternalServerError" : {
      "description" : "*Internal Server Error* - The server encountered an unexpected condition that prevented it from fulfilling the request.\n",
      "schema" : {
        "$ref" : "#/definitions/ErrorResponse"
      }
    },
    "502-BadGateway" : {
      "description" : "*Bad Gateway* - The server encountered an unexpected condition when calling another service.\n",
      "schema" : {
        "$ref" : "#/definitions/ErrorResponse"
      }
    },
    "503-ServiceUnavailable" : {
      "description" : "*Service Unavailable* - The server cannot fulfill the request due to a temporary overloading or maintenance of the server. Retry later.\n",
      "schema" : {
        "$ref" : "#/definitions/ErrorResponse"
      }
    }
  },
  "x-dox-DesignDocs" : [ {
    "description" : "Individual MS"
  } ]
}