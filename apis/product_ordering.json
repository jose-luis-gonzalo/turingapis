{
  "swagger" : "2.0",
  "info" : {
    "description" : "This API manages the product order resource. It enables the retrieval of product orders and order items, along with their prices, promotions, immediate pay options, related party, terms, channel, and the configuration of ordered items. In addition, the API enables to create, delete, and modify product orders, and to add, delete, and modify order items of a product order.\n  ###### Compliant with TMF622_Product_Ordering_Management_API_REST_Specification_R17.5.0\n",
    "version" : "2.1",
    "title" : "Product Ordering Management",
    "contact" : {
      "name" : "Amdocs Inc.",
      "url" : "http://www.amdocs.com",
      "email" : "support@amdocs.com"
    },
    "license" : {
      "name" : "Amdocs Inc.",
      "url" : "http://www.amdocs.com"
    },
    "x-amdocs" : {
      "exposed" : "public",
      "service-principals" : [ "productorder-validateorder-app-id", "productorder-submitorder-app-id", "productorder-productorder-app-id", "productorder-price-app-id", "productorder-deliverproductorder-app-id" ]
    }
  },
  "host" : "amdocs.com",
  "basePath" : "/productOrdering/v2.1",
  "tags" : [ {
    "name" : "productOrder"
  }, {
    "name" : "orderItem"
  }, {
    "name" : "deliveryMethod"
  } ],
  "schemes" : [ "https" ],
  "paths" : {
    "/productOrder" : {
      "post" : {
        "tags" : [ "productOrder" ],
        "summary" : "Create a product order",
        "description" : "This operation creates a product order entity with one or more items.\n\nIf the system is configured to accept partial configuration, then the given order items represent additions to the default configuration of the product offerings. Otherwise, the order items are created as-is. If an order item is set only with the *productOffering.id*, the created order item represent the default configuration for that product offering.\n\n\n###### TMF OpenAPI compliant\n\n**Mandatory&#58;**\n- *orderItem.productOffering*\n- *product.id* (unless *orderItem* represents a Provide action)\n- *orderItem.action*\n\n**Readonly&#58;**\n- *orderItem.metadata*\n- *orderItem.characteristic.metadata*\n- *orderItem.product.metadata*\n- *orderItem.product.characteristic.metadata*\n- *orderItem.itemTerm.metadata*\n\n**Business rules&#58;**\n- *modifyReason* (action must match the *orderItem.action*)\n- *relatedParty* (only one *relatedRarty* with role = Customer and Customer status is Active)\n- *billingAccount* (*relatedParty* with role = Customer is a prerequisite, it must be associated with the same Customer)\n- *product* (*primaryProductId* and *productOrderRef* are mutually exclusive)\n\n**Reference values&#58;**\n- *action* (*ProductOfferingConfiguration&#58; actionsPerCalculatedKeyTable.actionsPerCalculatedKeyMap*)\n- *modifyReason.name* (*ProductOfferingConfiguration&#58; modifyReasonsTable.modifyReasonsPerAction*)\n- *channel* (*ApplicationContext*)\n- *relatedParty.role* = Customer (*Configuration&#58; relatedPartyCustomerRole*)\n- *relatedParty.status* = Active (*Configuration&#58; customerValidatorValidStatusValues*)\n- Fail if product offering is out-of-stock (*Configuration&#58; configuration.stockManagement.blockOrderItemIfOutOfStock*)\n- *noteType* (*Configuration&#58; configuration.note.productOrder.productOrderNoteTypes* | *configuration.note.orderItem.orderItemNoteTypes*)\n- System configured to accept partial configuration (*Configuration&#58; partialConfigurationMode*)\n",
        "operationId" : "createProductOrder",
        "consumes" : [ "application/json;charset=utf-8" ],
        "produces" : [ "application/json;charset=utf-8" ],
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Locale of the client\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "mask",
          "in" : "query",
          "description" : "Query mask, which is a set of flags that impact the returned fields.\nThe supported values are&#58;\n- *returnAttachments* - Once set, the API returns additional attachment information for the product offering and product offering terms.\n- *returnStockInformation* - Once set, the stock availability information is retrieved from the stock management system.\n- *returnCatalogMetadata* - Once set, the metadata is retrieved from the product catalog system (limited by configurable metadata type).If specific type is required, this type will be specified in the mask. \n- *returnNote* - Once set, notes associated with ProductOrder and/or OrderItem are returned. If specific noteType is required, this type should be specified in the mask. \n\n<i>Example&#58; mask=returnAttachments,returnStockInformation,returnCatalogMetadata.ResourceManagement,returnNote</i>\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "excludePrices",
          "in" : "query",
          "description" : "Indicates if the operation should involve with price recalculation and/include prices in the response. \nSet to 'false' to recalculate prices and return them in the response. \n",
          "required" : false,
          "type" : "boolean",
          "default" : true
        }, {
          "in" : "body",
          "name" : "ProductOrder",
          "description" : "Product order entity with one or more order items\n",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProductOrder"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "*Created* - The product order was created successfully.\n",
            "schema" : {
              "$ref" : "#/definitions/ProductOrder"
            }
          },
          "400" : {
            "description" : "*Bad Request* - The server cannot process the request due to a malformed syntax. The response can be caused by missing mandatory query parameters, invalid value in the query parameters, validation exceptions, and so on.\n",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "403" : {
            "description" : "*Forbidden* - The server refuses to apply the request because the client does not have access rights to the content.\n",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "409" : {
            "description" : "*Conflict* - The server cannot complete the request due to a conflict with the current state of the resource.\n",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "422" : {
            "description" : "*Unprocessable Entity* - The server understands the content type of the request entity, and the syntax of the request entity is correct, but was unable to process the contained instructions.\n",
            "schema" : {
              "$ref" : "#/definitions/ValidationError"
            }
          },
          "500" : {
            "description" : "*Internal Server Error* - The server encountered an unexpected condition that prevented it from fulfilling the request.\n",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "502" : {
            "description" : "*Bad Gateway* - The server encountered an unexpected condition when calling another service.\n",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "default" : {
            "description" : "*Internal Server Error* - The server encountered an unexpected condition that prevented it from fulfilling the request.\n",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "x-amdocs" : {
          "route-service" : "productorder-productorder-service",
          "public-roles" : [ "D1_ProductOrdering_create", "D1_ProductOrdering_bulkCreate" ],
          "private-roles" : [ "D1P_ProductOrdering_write", "FndP_APIGateway_gw" ]
        }
      }
    },
    "/productOrder/{productOrderId}" : {
      "get" : {
        "tags" : [ "productOrder" ],
        "summary" : "Retrieve a product order",
        "description" : "This operation retrieves a product order entity.\n\n###### TMF OpenAPI compliant\n\n**Business rules&#58;**\n- *boundedPrice* (when the product order state is Draft)\n\n**Reference values&#58;**\n- *noteType* (*Configuration&#58; configuration.note.productOrder.productOrderNoteTypes* | *configuration.note.orderItem.orderItemNoteTypes*)\n",
        "operationId" : "getProductOrder",
        "consumes" : [ "application/json;charset=utf-8" ],
        "produces" : [ "application/json;charset=utf-8" ],
        "parameters" : [ {
          "name" : "productOrderId",
          "in" : "path",
          "description" : "Unique identifier of the product order\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Locale of the client\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "This parameter specifies the fields to be retrieved in response to a request from the client&#58;\nThe list of resource attributes must be comma-separated.\nNested resource attributes can be specified using the dot notation, as follows&#58;\n[parentresource].[childresource].[attributeName]\nA subselector can be specified to request a subset of nested resource attributes for arrays or objects, as follows&#58;\n[resource]([attributeName], �, [attributeName])\nA wildcard can be specified to request all attributes of nested resources, as follows&#58;\n[resource]/*If fields is specified with reserved value �none�, then no fields MUST be returned.\nIf no specific set of fields is specified, all fields MUST be returned. \n",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "minLength" : 0
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "mask",
          "in" : "query",
          "description" : "Query mask, which is a set of flags that impact the returned fields.\nThe supported values are&#58;\n- *returnAttachments* - Once set, the API returns additional attachment information for the product offering and product offering terms.\n- *returnStockInformation* - Once set, the stock availability information is retrieved from the stock management system.\n- *returnCatalogMetadata* - Once set, the metadata is retrieved from the product catalog system (limited by configurable metadata type).If specific type is required, this type will be specified in the mask. \n- *returnNote* - Once set, notes associated with ProductOrder and/or OrderItem are returned. If specific noteType is required, this type should be specified in the mask. \n\n<i>Example&#58; mask=returnAttachments,returnStockInformation,returnCatalogMetadata.ResourceManagement,returnNote</i>\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "boundedPrice",
          "in" : "query",
          "description" : "Indicates whether to recalculate the product order price or to return the previously calculated price.\nThis indication is relevant only for product orders in a Draft state.\n",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "excludePrices",
          "in" : "query",
          "description" : "Indicates if the operation should involve with price recalculation and/include prices in the response. \nSet to 'false' to recalculate prices and return them in the response. \n",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "*OK* - The product order was retrieved successfully.\n",
            "schema" : {
              "$ref" : "#/definitions/ProductOrder"
            }
          },
          "206" : {
            "description" : "*Partial Content* - The product order was retrieved partially.\n",
            "schema" : {
              "$ref" : "#/definitions/ProductOrder"
            }
          },
          "400" : {
            "description" : "*Bad Request* - The server cannot process the request due to a malformed syntax. The response can be caused by missing mandatory query parameters, invalid value in the query parameters, validation exceptions, and so on.\n",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "*Not Found* - The server did not find anything matching the request URI. The response can be caused by missing path parameters, invalid web resource, and so on.\n",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "409" : {
            "description" : "*Conflict* - The server cannot complete the request due to a conflict with the current state of the resource.\n",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "*Internal Server Error* - The server encountered an unexpected condition that prevented it from fulfilling the request.\n",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "default" : {
            "description" : "*Internal Server Error* - The server encountered an unexpected condition that prevented it from fulfilling the request.\n",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "x-amdocs" : {
          "route-service" : "productorder-productorder-service",
          "public-roles" : [ "D1_ProductOrdering_retrieve", "D1_ProductOrdering_bulkRetrieve" ],
          "private-roles" : [ "D1P_ProductOrdering_read", "FndP_APIGateway_gw" ]
        }
      }
    },
    "/productOrder/{productOrderId}/manageRelatedParty" : {
      "post" : {
        "tags" : [ "productOrder" ],
        "summary" : "Manage association of a related party with a product order",
        "description" : "This operation manages the association of the product order entity with a related party.\n\n**Mandatory&#58;**\n- *relatedPartyId* (when action = replace | remove)\n- *role* (when action = replace | remove)\n- *RelatedPartyRef* (when action = add | replace)\n- *RelatedPartyRef.role* (when action = add | replace)\n- *RelatedParty.id* (when *role* = Customer)\n\n**Business rules&#58;**\n- Product order state is Draft\n- *relatedRarty.role* is unique\n- Customer status is Active (when *role* = Customer)\n\n**Reference values&#58;**\n- *role* (*Configuration&#58; configuration.relatedParty.addRelatedPartyAllowedRoles* | *replaceRelatedPartyAllowedRoles* | *removeRelatedPartyAllowedRoles*)\n- *action* (*Configuration&#58; configuration.relatedParty.validManageRelatedPartyActions*)\n",
        "operationId" : "manageProductOrderRelatedParty",
        "consumes" : [ "application/json;charset=utf-8" ],
        "produces" : [ "application/json;charset=utf-8" ],
        "parameters" : [ {
          "name" : "productOrderId",
          "in" : "path",
          "description" : "Unique identifier of the product order\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Locale of the client\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "*If-Match* HTTP request header makes the request conditional. \n- For GET and HEAD methods, the server will send back the requested resource only if it matches one of the listed ETags. \n- For PUT and other non-safe methods, the server will only upload the resource.\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Amdocs-Client-Id",
          "in" : "header",
          "description" : ".\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "relatedPartyId",
          "in" : "query",
          "description" : "Unique identifier of the related party\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "role",
          "in" : "query",
          "description" : "Role of the related party\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "action",
          "in" : "query",
          "description" : "Required action - add, replace, or remove\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "This parameter specifies the fields to be retrieved in response to a request from the client&#58;\nThe list of resource attributes must be comma-separated.\nNested resource attributes can be specified using the dot notation, as follows&#58;\n[parentresource].[childresource].[attributeName]\nA subselector can be specified to request a subset of nested resource attributes for arrays or objects, as follows&#58;\n[resource]([attributeName], �, [attributeName])\nA wildcard can be specified to request all attributes of nested resources, as follows&#58;\n[resource]/*If fields is specified with reserved value �all�, then all fields MUST be returned.\n",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "minLength" : 0
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "excludePrices",
          "in" : "query",
          "description" : "Indicates if the operation should involve with price recalculation and/include prices in the response. \nSet to 'false' to recalculate prices and return them in the response. \n",
          "required" : false,
          "type" : "boolean",
          "default" : true
        }, {
          "in" : "body",
          "name" : "RelatedPartyRef",
          "description" : "The related party associated with the product order.\n",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/RelatedPartyRef"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "*OK* - The association of the related party with the product order was updated successfully.\n",
            "schema" : {
              "$ref" : "#/definitions/ProductOrder"
            }
          },
          "400" : {
            "description" : "*Bad Request* - The server cannot process the request due to a malformed syntax. The response can be caused by missing mandatory query parameters, invalid value in the query parameters, validation exceptions, and so on.\n",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "*Not Found* - The server did not find anything matching the request URI. The response can be caused by missing path parameters, invalid web resource, and so on.\n",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "409" : {
            "description" : "*Conflict* - The server cannot complete the request due to a conflict with the current state of the resource.\n",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "422" : {
            "description" : "*Unprocessable Entity* - The server understands the content type of the request entity, and the syntax of the request entity is correct, but was unable to process the contained instructions.\n",
            "schema" : {
              "$ref" : "#/definitions/ValidationError"
            }
          },
          "500" : {
            "description" : "*Internal Server Error* - The server encountered an unexpected condition that prevented it from fulfilling the request.\n",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "default" : {
            "description" : "*Internal Server Error* - The server encountered an unexpected condition that prevented it from fulfilling the request.\n",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "x-amdocs" : {
          "route-service" : "productorder-productorder-service",
          "public-roles" : [ "D1_ProductOrdering_manageRelatedParty" ],
          "private-roles" : [ "D1P_ProductOrdering_write", "FndP_APIGateway_gw" ]
        }
      }
    },
    "/productOrder/{productOrderId}/manageBillingAccount" : {
      "post" : {
        "tags" : [ "productOrder" ],
        "summary" : "Manage association of a billing account with order entities",
        "description" : "This operation manages the distribution of the product order entity charges to billing accounts.\nThe supported entities that can be associated with a billing account are&#58; product order, order item, or order item price.\n\n**Mandatory&#58;**\n- *action* (when associating product order)\n- *billingAccount* (when associating product order and action = add | replace | remove)\n- *orderItem.id* (when associating order item | order item price)\n- *orderItem.action* (when associating order item)\n- *orderItem.billingAccount* (when associating order item and action = add | replace | remove )\n- *orderItem.itemPrice.id* (when associating order item price)\n- *orderItem.itemPrice.action* (when associating order item price)\n- *orderItem.itemPrice.billingAccount* (when associating order item price and action = add | replace | remove)\n\n**Business rules&#58;**\n- Product order state is Draft\n\n**Reference values&#58;**\n- *action* (*Configuration&#58; configuration.billingAccount.validManageBillingAccountActions*)\n",
        "operationId" : "manageBillingAccountRelation",
        "consumes" : [ "application/json;charset=utf-8" ],
        "produces" : [ "application/json;charset=utf-8" ],
        "parameters" : [ {
          "name" : "productOrderId",
          "in" : "path",
          "description" : "Unique identifier of the product order\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Locale of the client\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "*If-Match* HTTP request header makes the request conditional. \n- For GET and HEAD methods, the server will send back the requested resource only if it matches one of the listed ETags. \n- For PUT and other non-safe methods, the server will only upload the resource.\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "This parameter specifies the fields to be retrieved in response to a request from the client&#58;\nThe list of resource attributes must be comma-separated.\nNested resource attributes can be specified using the dot notation, as follows&#58;\n[parentresource].[childresource].[attributeName]\nA subselector can be specified to request a subset of nested resource attributes for arrays or objects, as follows&#58;\n[resource]([attributeName], �, [attributeName])\nA wildcard can be specified to request all attributes of nested resources, as follows&#58;\n[resource]/*If fields is specified with reserved value �all�, then all fields MUST be returned.\n",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "minLength" : 0
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "excludePrices",
          "in" : "query",
          "description" : "Indicates if the operation should involve with price recalculation and/include prices in the response. \nSet to 'false' to recalculate prices and return them in the response. \n",
          "required" : false,
          "type" : "boolean",
          "default" : true
        }, {
          "in" : "body",
          "name" : "ProductOrderBillingAccountRelation",
          "description" : "The association of the product order with a billing account\n",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProductOrderBillingAccountRelation"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "*OK* - The association of the billing account with the product order was updated successfully.\n",
            "schema" : {
              "$ref" : "#/definitions/ProductOrder"
            }
          },
          "400" : {
            "description" : "*Bad Request* - The server cannot process the request due to a malformed syntax. The response can be caused by missing mandatory query parameters, invalid value in the query parameters, validation exceptions, and so on.\n",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "*Not Found* - The server did not find anything matching the request URI. The response can be caused by missing path parameters, invalid web resource, and so on.\n",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "409" : {
            "description" : "*Conflict* - The server cannot complete the request due to a conflict with the current state of the resource.\n",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "422" : {
            "description" : "*Unprocessable Entity* - The server understands the content type of the request entity, and the syntax of the request entity is correct, but was unable to process the contained instructions.\n",
            "schema" : {
              "$ref" : "#/definitions/ValidationError"
            }
          },
          "500" : {
            "description" : "*Internal Server Error* - The server encountered an unexpected condition that prevented it from fulfilling the request.\n",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "default" : {
            "description" : "*Internal Server Error* - The server encountered an unexpected condition that prevented it from fulfilling the request.\n",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "x-amdocs" : {
          "route-service" : "productorder-productorder-service",
          "public-roles" : [ "D1_ProductOrdering_manageBillingAccount" ],
          "private-roles" : [ "D1P_ProductOrdering_write", "FndP_APIGateway_gw" ]
        }
      }
    },
    "/productOrder/{productOrderId}/orderItem/deliveryMethod" : {
      "get" : {
        "tags" : [ "deliveryMethod" ],
        "summary" : "Retrieve order items related to a delivery method",
        "description" : "This operation retrieves the following entities&#58;\n- Order item entities that represent a product offering requiring a delivery method. The delivery method is defined on the related product offering.\n- Existing order item entities that represent a product offering that stands for those delivery methods. The definition of Delivering/Requires Delivery is based on a configurable product offer characteristic.\n\n**Business rules&#58;**\n- Product order state is Draft\n\n**Reference values&#58;**\n- require (*Configuration&#58; configuration.deliveryMethod*)\n- Delivering characteristic (*Configuration&#58; configuration.shippingOptions*)\n",
        "operationId" : "getDeliveryMethodOrderItem",
        "consumes" : [ "application/json;charset=utf-8" ],
        "produces" : [ "application/json;charset=utf-8" ],
        "parameters" : [ {
          "name" : "productOrderId",
          "in" : "path",
          "description" : "Unique identifier of the product order\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Locale of the client\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "mask",
          "in" : "query",
          "description" : "Query mask, which is a set of flags that impact the returned fields.\nThe supported values are&#58;\n- *returnAttachments* - Once set, the API returns additional attachment information for the product offering and product offering terms.\n- *returnStockInformation* - Once set, the stock availability information is retrieved from the stock management system.\n- *returnCatalogMetadata* - Once set, the metadata is retrieved from the product catalog system (limited by configurable metadata type).If specific type is required, this type will be specified in the mask. \n- *returnNote* - Once set, notes associated with ProductOrder and/or OrderItem are returned. If specific noteType is required, this type should be specified in the mask. \n\n<i>Example&#58; mask=returnAttachments,returnStockInformation,returnCatalogMetadata.ResourceManagement,returnNote</i>\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "excludePrices",
          "in" : "query",
          "description" : "Indicates if the operation should involve with price recalculation and/include prices in the response. \nSet to 'false' to recalculate prices and return them in the response. \n",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "*OK* - The order items related to the delivery method were retrieved successfully.\n",
            "schema" : {
              "$ref" : "#/definitions/ProductOrder"
            }
          },
          "400" : {
            "description" : "*Bad Request* - The server cannot process the request due to a malformed syntax. The response can be caused by missing mandatory query parameters, invalid value in the query parameters, validation exceptions, and so on.\n",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "*Not Found* - The server did not find anything matching the request URI. The response can be caused by missing path parameters, invalid web resource, and so on.\n",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "409" : {
            "description" : "*Conflict* - The server cannot complete the request due to a conflict with the current state of the resource.\n",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "*Internal Server Error* - The server encountered an unexpected condition that prevented it from fulfilling the request.\n",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "default" : {
            "description" : "*Internal Server Error* - The server encountered an unexpected condition that prevented it from fulfilling the request.\n",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "x-amdocs" : {
          "route-service" : "productorder-productorder-service",
          "public-roles" : [ "D1_ProductOrdering_retrieve" ],
          "private-roles" : [ "D1P_ProductOrdering_read", "FndP_APIGateway_gw" ]
        }
      }
    },
    "/productOrder/{productOrderId}/orderItem/{orderItemId}/manageRelatedParty" : {
      "post" : {
        "tags" : [ "orderItem" ],
        "summary" : "Manage the related party association with order items",
        "description" : "This operation manages the association of product(s) (related to the order item entity) with a related party.\n\n**Mandatory&#58;**\n- *nestedOrderItemId* (when the associated order item/s is/are not top-most)\n- *relatedPartyId* (when action = replace | remove)\n- *role* (when action = replace | remove)\n- *RelatedPartyRef* (when action = add | replace)\n- *RelatedPartyRef.role* (when action = add | replace)\n\n**Business rules&#58;**\n- Product order state is Draft\n- *relatedParty* (only one *relatedRarty* per role)\n- *role* = Customer (customer status is Active)\n\n**Reference values&#58;**\n- *role* (*Configuration&#58; configuration.relatedParty.addManageOrderItemRelatedPartyAllowedRoles* | *replaceManageOrderItemRelatedPartyAllowedRoles* | *removeManageOrderItemRelatedPartyAllowedRoles*)\n- *action* (*Configuration&#58; configuration.relatedParty.validManageRelatedPartyActions*)\n",
        "operationId" : "manageOrderItemRelatedParty",
        "consumes" : [ "application/json;charset=utf-8" ],
        "produces" : [ "application/json;charset=utf-8" ],
        "parameters" : [ {
          "name" : "productOrderId",
          "in" : "path",
          "description" : "Unique identifier of the product order\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "orderItemId",
          "in" : "path",
          "description" : "Unique identifier of the order item\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Locale of the client\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "*If-Match* HTTP request header makes the request conditional. \n- For GET and HEAD methods, the server will send back the requested resource only if it matches one of the listed ETags. \n- For PUT and other non-safe methods, the server will only upload the resource.\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "nestedOrderItemId",
          "in" : "query",
          "description" : "Unique identifiers of the nested order items\n",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi",
          "minItems" : 1
        }, {
          "name" : "relatedPartyId",
          "in" : "query",
          "description" : "Unique identifier of the related party\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "role",
          "in" : "query",
          "description" : "Role of the related party\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "action",
          "in" : "query",
          "description" : "Required action - add, replace, or remove\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "This parameter specifies the fields to be retrieved in response to a request from the client&#58;\nThe list of resource attributes must be comma-separated.\nNested resource attributes can be specified using the dot notation, as follows&#58;\n[parentresource].[childresource].[attributeName]\nA subselector can be specified to request a subset of nested resource attributes for arrays or objects, as follows&#58;\n[resource]([attributeName], �, [attributeName])\nA wildcard can be specified to request all attributes of nested resources, as follows&#58;\n[resource]/*If fields is specified with reserved value �all�, then all fields MUST be returned.\n",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "minLength" : 0
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "excludePrices",
          "in" : "query",
          "description" : "Indicates if the operation should involve with price recalculation and/include prices in the response. \nSet to 'false' to recalculate prices and return them in the response. \n",
          "required" : false,
          "type" : "boolean",
          "default" : true
        }, {
          "in" : "body",
          "name" : "RelatedPartyRef",
          "description" : "The related party associated with the order item.\n",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/RelatedPartyRef"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "*OK* - The association of the related party with the product order item was updated successfully.\n",
            "schema" : {
              "$ref" : "#/definitions/ProductOrder"
            }
          },
          "400" : {
            "description" : "*Bad Request* - The server cannot process the request due to a malformed syntax. The response can be caused by missing mandatory query parameters, invalid value in the query parameters, validation exceptions, and so on.\n",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "*Not Found* - The server did not find anything matching the request URI. The response can be caused by missing path parameters, invalid web resource, and so on.\n",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "409" : {
            "description" : "*Conflict* - The server cannot complete the request due to a conflict with the current state of the resource.\n",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "422" : {
            "description" : "*Unprocessable Entity* - The server understands the content type of the request entity, and the syntax of the request entity is correct, but was unable to process the contained instructions.\n",
            "schema" : {
              "$ref" : "#/definitions/ValidationError"
            }
          },
          "500" : {
            "description" : "*Internal Server Error* - The server encountered an unexpected condition that prevented it from fulfilling the request.\n",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "default" : {
            "description" : "*Internal Server Error* - The server encountered an unexpected condition that prevented it from fulfilling the request.\n",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "x-amdocs" : {
          "route-service" : "productorder-productorder-service",
          "public-roles" : [ "D1_ProductOrdering_update" ],
          "private-roles" : [ "D1P_ProductOrdering_write", "FndP_APIGateway_gw" ]
        }
      }
    },
    "/productOrder/{productOrderId}/validate" : {
      "post" : {
        "tags" : [ "productOrder" ],
        "summary" : "Validate a product order",
        "description" : "This operation performs business validations on the product order entity.\nThe validations performed are dependent on the *stage* and *validationType* parameters.\n\n**Reference values&#58;**\n- *stage* (*Configuration&#58; configuration.defaultValidationStage*)\n- *validationType* (*Configuration&#58; validators.types | defaultValidators*)\n- *channel* (*ApplicationContext*)\n",
        "operationId" : "validateProductOrder",
        "consumes" : [ "application/json;charset=utf-8" ],
        "produces" : [ "application/json;charset=utf-8" ],
        "parameters" : [ {
          "name" : "productOrderId",
          "in" : "path",
          "description" : "Unique identifier of the product order\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Locale of the client\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "stage",
          "in" : "query",
          "description" : "Validation stage, in terms of the product order lifecycle (for example: *orderValidation*, *orderSubmit*, and so on).\nThis value defines the default validations to be performed, if none were set.\nThis value is passed to other systems down the stream, which might use it to refine the executed validation rules, and so on.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "validationType",
          "in" : "query",
          "description" : "Validation types to be performed. If not provided, the default (configurable) validations are performed.\n",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "*OK* - The product order was validated successfully.\n",
            "schema" : {
              "$ref" : "#/definitions/Validation"
            }
          },
          "400" : {
            "description" : "*Bad Request* - The server cannot process the request due to a malformed syntax. The response can be caused by missing mandatory query parameters, invalid value in the query parameters, validation exceptions, and so on.\n",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "*Not Found* - The server did not find anything matching the request URI. The response can be caused by missing path parameters, invalid web resource, and so on.\n",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "422" : {
            "description" : "*Unprocessable Entity* - The server understands the content type of the request entity, and the syntax of the request entity is correct, but was unable to process the contained instructions.\n",
            "schema" : {
              "$ref" : "#/definitions/ValidationError"
            }
          },
          "500" : {
            "description" : "*Internal Server Error* - The server encountered an unexpected condition that prevented it from fulfilling the request.\n",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "502" : {
            "description" : "*Bad Gateway* - The server encountered an unexpected condition when calling another service.\n",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "default" : {
            "description" : "*Internal Server Error* - The server encountered an unexpected condition that prevented it from fulfilling the request.\n",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "x-amdocs" : {
          "route-service" : "productorder-validateorder-service",
          "public-roles" : [ "D1_ProductOrdering_validate" ],
          "private-roles" : [ "D1P_ProductOrdering_write", "FndP_APIGateway_gw" ]
        }
      }
    },
    "/productOrder/{productOrderId}/submit" : {
      "post" : {
        "tags" : [ "productOrder" ],
        "summary" : "Set the state of a product order to Submitted",
        "description" : "This operation sets the state of the product order entity to Submitted.\nThe operation supports the following configurable preliminary options&#58;\n- Validate the product order entity. Thus, failing the operation upon specific configuration validation statuses.\n- Evaluate promotions and/or calculate the price of the product order entity. Thus, failing the operation upon withdrawn promotions and/or missing prices.\n- Evaluate installment options of the relevant order item entities. Thus, failing the operation upon installments restored to the default.\n- Evaluate stock reservation | availability of the relevant order item entities. Thus, failing the operation upon reservation failure | out-of-stock.\n\n*The returned product order entity is partly populated, to reflect only validation messages.*\n\n**Business rules&#58;**\n- Product order state is Draft\n- waivePONR can be set by consumer with specific roles\n\n**Reference values&#58;**\n- Submitted state (*Configuration&#58; configuration.productOrder.state.submitted*)\n- Validation types (*Configuration&#58; configuration.submitOrder.validationTypes*)\n- Validation statuses to fail upon (*Configuration&#58; configuration.submitOrder.validationFailureStatus*)\n- Evaluate promotions and/or calculate price (*Configuration&#58; configuration.submitOrder.shouldValidatePromotionsAndPrices*)\n- Fail upon price failure (*Configuration&#58; configuration.submitOrder.shouldFailOperationUponPricingFailure*)\n- Fail upon withdrawn promotions (*Configuration&#58; configuration.submitOrder.shouldFailOperationUponPromotionWithdrawn*)\n- Evaluate installment options (*Configuration&#58; configuration.submitOrder.shouldValidateInstallmentReset*)\n- Fail upon restored installments (*Configuration&#58; configuration.submitOrder.shouldFailOperationUponInstallmentReset*)\n- Stock reservation evaluation type (*Configuration&#58; configuration.stockManagement.stockReservationMode*)\n- Fail upon stock error (*Configuration.stockManagement.stockErrorSubmitAllowed*)\n- Waive PONR roles (*Configuration&#58; configuration.amend.ponr.waive.roles | configuration.amendCancel.ponr.waive.roles*)\n",
        "operationId" : "submitProductOrder",
        "consumes" : [ "application/json;charset=utf-8" ],
        "produces" : [ "application/json;charset=utf-8" ],
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Locale of the client\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "productOrderId",
          "in" : "path",
          "description" : "Unique identifier of the product order\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "*If-Match* HTTP request header makes the request conditional. \n- For GET and HEAD methods, the server will send back the requested resource only if it matches one of the listed ETags. \n- For PUT and other non-safe methods, the server will only upload the resource.\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "waivePONR",
          "in" : "query",
          "description" : "Indicates if the 'point of no return' validation should be waived for amended order items\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "*OK* - The product order was submitted successfully.\n",
            "schema" : {
              "$ref" : "#/definitions/ProductOrder"
            }
          },
          "400" : {
            "description" : "*Bad Request* - The server cannot process the request due to a malformed syntax. The response can be caused by missing mandatory query parameters, invalid value in the query parameters, validation exceptions, and so on.\n",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "*Not Found* - The server did not find anything matching the request URI. The response can be caused by missing path parameters, invalid web resource, and so on.\n",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "422" : {
            "description" : "*Unprocessable Entity* - The server understands the content type of the request entity, and the syntax of the request entity is correct, but was unable to process the contained instructions.\n",
            "schema" : {
              "$ref" : "#/definitions/ValidationError"
            }
          },
          "500" : {
            "description" : "*Internal Server Error* - The server encountered an unexpected condition that prevented it from fulfilling the request.\n",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "502" : {
            "description" : "*Bad Gateway* - The server encountered an unexpected condition when calling another service.\n",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "default" : {
            "description" : "*Internal Server Error* - The server encountered an unexpected condition that prevented it from fulfilling the request.\n",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "x-amdocs" : {
          "route-service" : "productorder-submitorder-service",
          "public-roles" : [ "D1_ProductOrdering_submit", "D1_ProductOrdering_bulkSubmit" ],
          "private-roles" : [ "D1P_ProductOrdering_write", "FndP_APIGateway_gw" ]
        }
      }
    },
    "/productOrder/{productOrderId}/orderItem/{orderItemId}/managePhoneNumberProduct" : {
      "post" : {
        "tags" : [ "orderItem" ],
        "summary" : "Manage the phone number characteristic",
        "description" : "This operation manages the phone number characteristic of the order item.\nIn case a temporary phone number is provided, it is allocated until the port-in activity is completed.\n\n**Mandatory&#58;**\n- *portedNumber* (when *isPortIn* = true)\n- *phoneNumber* (when *isPortIn* = false)\n\n**Business rules&#58;**\n- Product order state is Draft\n- Validation against external system is performed (when *isPortIn* = true) \n- *phoneNumber* is set to a temporary number (provided in response or allocated from resource allocation domain)\n\n**Reference values&#58;**\n- Allocate temporary number if not set (*Configuration&#58; configuration.useTemporaryNumberPortInFlow*)\n",
        "operationId" : "managePhoneNumberProduct",
        "consumes" : [ "application/json;charset=utf-8" ],
        "produces" : [ "application/json;charset=utf-8" ],
        "parameters" : [ {
          "name" : "productOrderId",
          "in" : "path",
          "description" : "Unique identifier of the product order\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "orderItemId",
          "in" : "path",
          "description" : "Unique identifier of the order item\n",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "managePhoneNumberProduct",
          "description" : "Phone number of the product that is validated and updated when there is a port in activity\n",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PhoneNumberProduct"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "*OK* - The ported in product order item was updated successfully.\n",
            "schema" : {
              "$ref" : "#/definitions/ProductOrderRef"
            }
          },
          "400" : {
            "description" : "*Bad Request* - The server cannot process the request due to a malformed syntax. The response can be caused by missing mandatory query parameters, invalid value in the query parameters, validation exceptions, and so on.\n",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "*Not Found* - The server did not find anything matching the request URI. The response can be caused by missing path parameters, invalid web resource, and so on.\n",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "409" : {
            "description" : "*Conflict* - The server cannot complete the request due to a conflict with the current state of the resource.\n",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "422" : {
            "description" : "*Unprocessable Entity* - The server understands the content type of the request entity, and the syntax of the request entity is correct, but was unable to process the contained instructions.\n",
            "schema" : {
              "$ref" : "#/definitions/ValidationError"
            }
          },
          "500" : {
            "description" : "*Internal Server Error* - The server encountered an unexpected condition that prevented it from fulfilling the request.\n",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "502" : {
            "description" : "*Bad Gateway* - The server encountered an unexpected condition when calling another service.\n",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "default" : {
            "description" : "*Internal Server Error* - The server encountered an unexpected condition that prevented it from fulfilling the request.\n",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "x-amdocs" : {
          "route-service" : "productorder-modifyorder-service",
          "public-roles" : [ "D1_ProductOrdering_managePhoneNumberProduct" ],
          "private-roles" : [ "D1P_ProductOrdering_write", "FndP_APIGateway_gw" ]
        }
      }
    },
    "/productOrder/{productOrderId}/manageDeliveryMethod" : {
      "post" : {
        "tags" : [ "deliveryMethod" ],
        "summary" : "Manage a delivery method",
        "description" : "This operation manages the order item entities that represent a Delivering product offering. Upon *add* or *replace* action, it connects the created or the updated order items to existing order items that represent a Requires Delivery product offering whose Shipping Option the created or the updated order item matches. The definition of Shipping Option and Requires Delivery options is based on a configurable product offering characteristic.\n\n**Business rules&#58;**\n- Product order state is Draft\n\n**Mandatory&#58;**\n- *deliveryMethodOrderItem.id* (when *deliveryMethodOrderItem.action* = replace | remove) \n- *deliveryMethodOrderItem.productOffering* (when *deliveryMethodOrderItem.action* = replace | add)\n\n**Reference values&#58;**\n- Requires Delivery product offering characteristic name define by metadata (*Configuration&#58; order.item.characteristic.name.delivery.method*)\n- Requires Delivery product offering characteristic value define by metadata (*Configuration&#58; order.item.characteristic.value.shipping* | *order.item.characteristic.value.pickup*)\n- Shipping Option characteristic name define by metadata (*Configuration&#58; order.item.characteristic.name.shipping.option*) \n- Delivery method relation type (*Configuration&#58; order.item.relationship.type.shipping* | *order.item.relationship.type.product*)\n",
        "operationId" : "manageDeliveryMethod",
        "consumes" : [ "application/json;charset=utf-8" ],
        "produces" : [ "application/json;charset=utf-8" ],
        "parameters" : [ {
          "name" : "productOrderId",
          "in" : "path",
          "description" : "Unique identifier of the product order\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Locale of the client\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "*If-Match* HTTP request header makes the request conditional. \n- For GET and HEAD methods, the server will send back the requested resource only if it matches one of the listed ETags. \n- For PUT and other non-safe methods, the server will only upload the resource.\n",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "DeliveryMethodProductOrder",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/DeliveryMethodProductOrder"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "*OK* - The product order was updated successfully with the order items of the delivery method.\n",
            "schema" : {
              "$ref" : "#/definitions/ProductOrderRef"
            }
          },
          "400" : {
            "description" : "*Bad Request* - The server cannot process the request due to a malformed syntax. The response can be caused by missing mandatory query parameters, invalid value in the query parameters, validation exceptions, and so on.\n",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "*Not Found* - The server did not find anything matching the request URI. The response can be caused by missing path parameters, invalid web resource, and so on.\n",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "409" : {
            "description" : "*Conflict* - The server cannot complete the request due to a conflict with the current state of the resource.\n",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "422" : {
            "description" : "*Unprocessable Entity* - The server understands the content type of the request entity, and the syntax of the request entity is correct, but was unable to process the contained instructions.\n",
            "schema" : {
              "$ref" : "#/definitions/ValidationError"
            }
          },
          "500" : {
            "description" : "*Internal Server Error* - The server encountered an unexpected condition that prevented it from fulfilling the request.\n",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "default" : {
            "description" : "*Internal Server Error* - The server encountered an unexpected condition that prevented it from fulfilling the request.\n",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "x-amdocs" : {
          "route-service" : "productorder-deliverproductorder-service",
          "public-roles" : [ "D1_ProductOrdering_manageDeliveryMethod" ],
          "private-roles" : [ "D1P_ProductOrdering_write", "FndP_APIGateway_gw" ]
        }
      }
    },
    "/productOrder/{productOrderId}/validateDeliveryMethod" : {
      "post" : {
        "tags" : [ "deliveryMethod" ],
        "summary" : "Validate a delivery method",
        "description" : "This operation performs business validations on order item entities. It verifies that each order item entity that represents a product offering that requires a delivery method is associated with an order item entity that represents a product offering that stands for the corresponding delivery method.\n\n**Business rules&#58;**\n- Product order state is Draft\n",
        "operationId" : "validateDeliveryMethodOrder",
        "consumes" : [ "application/json;charset=utf-8" ],
        "produces" : [ "application/json;charset=utf-8" ],
        "parameters" : [ {
          "name" : "productOrderId",
          "in" : "path",
          "description" : "Unique identifier of the product order\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Locale of the client\n",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "ProductOrder",
          "description" : "Product order entity with one or more order items\n",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ProductOrder"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "*OK* - The product order items were validated successfully.\n",
            "schema" : {
              "$ref" : "#/definitions/Validation"
            }
          },
          "400" : {
            "description" : "*Bad Request* - The server cannot process the request due to a malformed syntax. The response can be caused by missing mandatory query parameters, invalid value in the query parameters, validation exceptions, and so on.\n",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "*Not Found* - The server did not find anything matching the request URI. The response can be caused by missing path parameters, invalid web resource, and so on.\n",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "409" : {
            "description" : "*Conflict* - The server cannot complete the request due to a conflict with the current state of the resource.\n",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "*Internal Server Error* - The server encountered an unexpected condition that prevented it from fulfilling the request.\n",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "default" : {
            "description" : "*Internal Server Error* - The server encountered an unexpected condition that prevented it from fulfilling the request.\n",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "x-amdocs" : {
          "route-service" : "productorder-deliverproductorder-service",
          "public-roles" : [ "D1_ProductOrdering_validate" ],
          "private-roles" : [ "D1P_ProductOrdering_write", "FndP_APIGateway_gw" ]
        }
      }
    },
    "/deliveryMethodProductOffering" : {
      "get" : {
        "tags" : [ "deliveryMethod" ],
        "summary" : "Retrieve a list of product offerings that represent a delivery method",
        "description" : "This operation retrieves a list of product offerings that represent a delivery method. <br>The definition of Delivering and Requires Delivery options is based on a configurable product offering characteristic.\n\n **Mandatory&#58;**\n- *productOrderId* - this parameter should be set in order to  limited to Delivering product offerings that are related to order items that represent a Requires Delivery product offering.\n\n**Business rules&#58;**\n- Product order state is Draft\n\n**Reference values&#58;**\n- Delivering product offering type (*Configuration&#58; order.item.offering.type*)\n- Requires Delivery product offering characteristic name (*Configuration&#58; order.item.characteristic.name.delivery.method)*\n- Requires Delivery product offering characteristic value (*Configuration&#58; order.item.characteristic.value.shipping*)\n- Shipping Option characteristic name (*Configuration&#58; order.item.characteristic.name.shipping.option*) \n",
        "operationId" : "availableDeliveryMethodProductOffering",
        "consumes" : [ "application/json;charset=utf-8" ],
        "produces" : [ "application/json;charset=utf-8" ],
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Locale of the client\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "productOrderId",
          "in" : "query",
          "description" : "Unique identifier of the product order\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "filters",
          "in" : "query",
          "description" : "Limit the returned entities only to those that match the specified values.\nThe supported values are:\n - *metadata.value*\n<i>Example&#58; filters=metadata.value==shipping,inCustomerHand</i>\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "The list of fields by which the response is sorted. The supported value is: *price*.\nNote: The list of resource attributes must be comma-separated. The items are sorted according to the order of the fields listed in this parameter, from left to right. The default sorting order is ascending. To change the order to descending, the field must be specified with the minus (-) prefix. Nested resources attributes can be specified using the dot notation.\n",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "*OK* - The product offerings for the delivery method were retrieved successfully.\n",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/DeliveryProductOffering"
              }
            }
          },
          "400" : {
            "description" : "*Bad Request* - The server cannot process the request due to a malformed syntax. The response can be caused by missing mandatory query parameters, invalid value in the query parameters, validation exceptions, and so on.\n",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "*Not Found* - The server did not find anything matching the request URI. The response can be caused by missing path parameters, invalid web resource, and so on.\n",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "409" : {
            "description" : "*Conflict* - The server cannot complete the request due to a conflict with the current state of the resource.\n",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "*Internal Server Error* - The server encountered an unexpected condition that prevented it from fulfilling the request.\n",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "default" : {
            "description" : "*Internal Server Error* - The server encountered an unexpected condition that prevented it from fulfilling the request.\n",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "x-amdocs" : {
          "route-service" : "productorder-deliverproductorder-service",
          "public-roles" : [ "D1_ProductOrdering_retrieve" ],
          "private-roles" : [ "D1P_ProductOrdering_read", "FndP_APIGateway_gw" ]
        }
      }
    }
  },
  "definitions" : {
    "ProductOrder" : {
      "type" : "object",
      "required" : [ "orderItem" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Unique identifier of the product order\n",
          "readOnly" : true
        },
        "href" : {
          "type" : "string",
          "description" : "Hypertext reference to the product order\n",
          "readOnly" : true
        },
        "category" : {
          "type" : "string",
          "description" : "Category of the product order, for example, Residential, Business, Bulk, and so on\n"
        },
        "subCategory" : {
          "type" : "string",
          "description" : "Sub category of the product order, for example, PreActivation, Suspend, and so on\n"
        },
        "priority" : {
          "type" : "string",
          "description" : "Priority of the product order\n"
        },
        "description" : {
          "type" : "string",
          "description" : "Description of the product order\n"
        },
        "state" : {
          "type" : "string",
          "description" : "State of the product order, for example, Acknowledged, Rejected, Pending, and so on\n",
          "readOnly" : true
        },
        "externalId" : {
          "type" : "string",
          "description" : "External ID of the product order. This parameter is usually provided by a consumer to identify the product order in the consumer system.\n"
        },
        "orderDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date on which the product order was created\n",
          "readOnly" : true
        },
        "lastUpdate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date on which the product order was last updated\n",
          "readOnly" : true
        },
        "completionDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date on which the product order was completed\n",
          "readOnly" : true
        },
        "requestedStartDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date on which the product order was requested to be started\n"
        },
        "requestedCompletionDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date on which the product order was requested to be completed\n"
        },
        "expectedCompletionDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date on which the product order is expected to be completed\n",
          "readOnly" : true
        },
        "notificationContact" : {
          "type" : "string",
          "description" : "Contact for the notification\n"
        },
        "orderPriceDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date on which the product order price was calculated\n",
          "readOnly" : true
        },
        "isCustomerVisible" : {
          "type" : "boolean",
          "description" : "Indicates whether the product order is visible to the customer\n",
          "readOnly" : true,
          "default" : true
        },
        "@type" : {
          "type" : "string",
          "description" : "Type of the resource - *ProductOrder*\n"
        },
        "relatedParty" : {
          "type" : "array",
          "description" : "Party associated with the product order\n",
          "items" : {
            "$ref" : "#/definitions/RelatedPartyRef"
          }
        },
        "billingAccount" : {
          "$ref" : "#/definitions/BillingAccountRef"
        },
        "orderItem" : {
          "type" : "array",
          "description" : "Active order item of the product order\n",
          "items" : {
            "$ref" : "#/definitions/OrderItem"
          }
        },
        "orderTotalPrice" : {
          "type" : "array",
          "description" : "Total price of the product order\n",
          "readOnly" : true,
          "items" : {
            "$ref" : "#/definitions/OrderPrice"
          }
        },
        "channel" : {
          "type" : "array",
          "description" : "Channel of the product order\n",
          "items" : {
            "$ref" : "#/definitions/ChannelRef"
          }
        },
        "validation" : {
          "$ref" : "#/definitions/Validation"
        },
        "payment" : {
          "type" : "array",
          "description" : "Payment performed for the entire order or for an order item\n",
          "items" : {
            "$ref" : "#/definitions/PaymentRef"
          }
        },
        "immediatePromotion" : {
          "type" : "array",
          "readOnly" : true,
          "items" : {
            "$ref" : "#/definitions/ImmediatePromotion"
          },
          "x-dox-DesignNote" : "Reference to the Immediate Promotions with details\n"
        },
        "externalIdentifier" : {
          "type" : "array",
          "description" : "List of external identifiers related to the product order\n",
          "items" : {
            "$ref" : "#/definitions/ExternalIdentifier"
          }
        },
        "orderRelationship" : {
          "type" : "array",
          "description" : "Relation to other product order resources\n",
          "items" : {
            "$ref" : "#/definitions/OrderRelationship"
          }
        },
        "note" : {
          "type" : "array",
          "description" : "Extra information about the product order\n",
          "items" : {
            "$ref" : "#/definitions/Note"
          }
        },
        "extensions" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object",
            "properties" : { }
          },
          "x-amdocs" : {
            "refDefinition" : "ProductOrderExtensions"
          }
        }
      },
      "description" : "Product order resource\n"
    },
    "RelatedPartyRef" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Unique identifier of the related party\n"
        },
        "href" : {
          "type" : "string",
          "description" : "Hypertext reference to the related party, could be a party reference or a party role reference\n"
        },
        "name" : {
          "type" : "string",
          "description" : "Name of the related party\n"
        },
        "role" : {
          "type" : "string",
          "description" : "Role played by the related party\n"
        },
        "@referredType" : {
          "type" : "string",
          "description" : "Name of the type of the referred resource entity\n"
        },
        "lastName" : {
          "type" : "string",
          "description" : "Last name of the related party\n"
        },
        "firstName" : {
          "type" : "string",
          "description" : "First name of the related party\n"
        },
        "phoneNumber" : {
          "type" : "string",
          "description" : "Phone number of the related party\n"
        },
        "emailAddress" : {
          "type" : "string",
          "description" : "emailAddress of the related party\n"
        },
        "extensions" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object",
            "properties" : { },
            "x-amdocs" : {
              "refDefinition" : "RelatedPartyRefExtensions"
            }
          }
        }
      },
      "description" : "Party or party role that is linked to a specific entity\n"
    },
    "BillingAccountRef" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Unique identifier of the billing account\n"
        },
        "href" : {
          "type" : "string",
          "description" : "Hypertext reference to the billing account\n"
        },
        "name" : {
          "type" : "string",
          "description" : "Name of the billing account\n"
        },
        "@referredType" : {
          "type" : "string",
          "description" : "Name of the type of the referred resource entity\n"
        }
      },
      "description" : "Reference to the billing account\n"
    },
    "OrderItem" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Unique identifier of the order item\n",
          "readOnly" : true
        },
        "action" : {
          "type" : "string",
          "description" : "Action applied to the order item (for example - add, suspend, resume, terminate, and so on). If there are multiple actions, a semicolon (;) is used as the delimiter.\n"
        },
        "state" : {
          "type" : "string",
          "description" : "State of the order item\n",
          "readOnly" : true
        },
        "quantity" : {
          "type" : "integer",
          "description" : "Quantity of the order item. This property is relevant only for the top-most non-serialized order items.\n"
        },
        "@type" : {
          "type" : "string",
          "description" : "Type of the resource - *OrderItem*.\n"
        },
        "readOnly" : {
          "type" : "boolean",
          "description" : "Indicates whether the order item can be reconfigured\n",
          "readOnly" : true
        },
        "completionDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date on which the order item was completed\n",
          "readOnly" : true
        },
        "requestedStartDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date on which the order item was requested to be started\n"
        },
        "requestedCompletionDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date on which the order item was requested to be completed\n"
        },
        "expectedCompletionDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date on which the order item is expected to be completed\n",
          "readOnly" : true
        },
        "retroactiveChangeDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Past date of a retroactive change performed on the order item\n"
        },
        "creationDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Item creation date \n"
        },
        "itemPrice" : {
          "type" : "array",
          "description" : "Price of the order item\n",
          "readOnly" : true,
          "items" : {
            "$ref" : "#/definitions/OrderPrice"
          }
        },
        "itemTotalPrice" : {
          "type" : "array",
          "description" : "Total price of the order item\n",
          "readOnly" : true,
          "items" : {
            "$ref" : "#/definitions/OrderPrice"
          }
        },
        "orderItemRelationship" : {
          "type" : "array",
          "description" : "Relationship between order items\n",
          "items" : {
            "$ref" : "#/definitions/OrderItemRelationship"
          }
        },
        "productOffering" : {
          "$ref" : "#/definitions/ProductOfferingRef"
        },
        "product" : {
          "$ref" : "#/definitions/Product"
        },
        "billingAccount" : {
          "$ref" : "#/definitions/BillingAccountRef"
        },
        "appointment" : {
          "$ref" : "#/definitions/AppointmentRef"
        },
        "orderItem" : {
          "type" : "array",
          "description" : "List of order items\n",
          "items" : {
            "$ref" : "#/definitions/OrderItem"
          }
        },
        "productOfferingGroupOption" : {
          "$ref" : "#/definitions/ProductOfferingGroupOption"
        },
        "itemTerm" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OrderTerm"
          }
        },
        "modifyReason" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ModifyReason"
          }
        },
        "payment" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PaymentRef"
          }
        },
        "metadata" : {
          "type" : "array",
          "description" : "Product offering metadata\n",
          "items" : {
            "$ref" : "#/definitions/Metadata"
          }
        },
        "relatedImmediatePromotion" : {
          "type" : "array",
          "description" : "List of immediate promotions related to the order item\n",
          "readOnly" : true,
          "items" : {
            "$ref" : "#/definitions/RelatedImmediatePromotion"
          },
          "x-dox-DesignNote" : "Reference to the *immediatePromotionRef* entity.\n"
        },
        "stock" : {
          "type" : "array",
          "description" : "List of stock items\n",
          "readOnly" : true,
          "items" : {
            "$ref" : "#/definitions/StockItem"
          }
        },
        "stockReservation" : {
          "type" : "array",
          "description" : "List of stock reservations\n",
          "readOnly" : true,
          "items" : {
            "$ref" : "#/definitions/ProductStockReservationRef"
          }
        },
        "characteristic" : {
          "type" : "array",
          "description" : "Characteristics of the product offering\n",
          "items" : {
            "$ref" : "#/definitions/ProductCharacteristic"
          }
        },
        "externalIdentifier" : {
          "type" : "array",
          "description" : "List of external identifiers related to the order item\n",
          "items" : {
            "$ref" : "#/definitions/ExternalIdentifier"
          }
        },
        "note" : {
          "type" : "array",
          "description" : "Extra information about the order item\n",
          "items" : {
            "$ref" : "#/definitions/Note"
          }
        },
        "extensions" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object",
            "properties" : { }
          },
          "x-amdocs" : {
            "refDefinition" : "OrderItemExtensions"
          }
        }
      },
      "description" : "An identified part of the product order. A product order is decomposed into one or more order items.\n"
    },
    "OrderPrice" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Unique identifier of the catalog price\n"
        },
        "name" : {
          "type" : "string",
          "description" : "Name of the catalog price, for example, Subscription Price\n"
        },
        "description" : {
          "type" : "string",
          "description" : "Detailed description of the catalog price of the entity (the product order or the order item)\n"
        },
        "unitOfMeasure" : {
          "type" : "string",
          "description" : "Unit of measurement of the catalog price. This property is populated if the price type is allowance, such as gigabytes, minutes, and so on.\n"
        },
        "recurringChargePeriod" : {
          "type" : "string",
          "description" : "Period for which to repeat the application of the recurring charge - days, weeks, months, or years. This property is populated only if the price type is Recurring.\n"
        },
        "recurringChargePeriodLength" : {
          "type" : "integer",
          "description" : "The period length of the recurring charge\n"
        },
        "priceType" : {
          "type" : "string",
          "description" : "Category of the catalog price, for example, allowance, recurring, and so on\n"
        },
        "@type" : {
          "type" : "string",
          "description" : "Type of the resource - *OrderPrice*\n"
        },
        "price" : {
          "$ref" : "#/definitions/Price"
        },
        "finalPrice" : {
          "$ref" : "#/definitions/Price"
        },
        "standalonePrice" : {
          "$ref" : "#/definitions/Price"
        },
        "priceAlteration" : {
          "type" : "array",
          "description" : "Price alteration records\n",
          "items" : {
            "$ref" : "#/definitions/PriceAlteration"
          }
        },
        "billingAccount" : {
          "$ref" : "#/definitions/BillingAccountRef"
        },
        "immediatePayOption" : {
          "$ref" : "#/definitions/ImmediatePayOption"
        },
        "installmentOption" : {
          "$ref" : "#/definitions/InstallmentOption"
        },
        "taxIncluded" : {
          "type" : "string",
          "description" : "Indicates whether the price is defined in CatalogONE as including tax or excluding tax. Valid values are Excluded and Included.\n"
        },
        "role" : {
          "type" : "string",
          "description" : "The role of the price, for example, price, bundle price alteration, and so on\n"
        },
        "extensions" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object",
            "properties" : { }
          },
          "x-amdocs" : {
            "refDefinition" : "OrderPriceExtensions"
          }
        }
      },
      "description" : "An amount, usually of money, that represents the actual price paid by the customer for the order item or the product order in CatalogONE\n"
    },
    "Price" : {
      "type" : "object",
      "properties" : {
        "taxIncludedAmount" : {
          "$ref" : "#/definitions/Money"
        },
        "dutyFreeAmount" : {
          "$ref" : "#/definitions/Money"
        },
        "taxAmount" : {
          "$ref" : "#/definitions/Money"
        },
        "taxRate" : {
          "type" : "number",
          "format" : "float"
        },
        "percentage" : {
          "type" : "number",
          "format" : "float"
        },
        "priceReduction" : {
          "$ref" : "#/definitions/Money"
        },
        "priceOverride" : {
          "$ref" : "#/definitions/Money"
        },
        "priceRecordId" : {
          "type" : "string",
          "description" : "The unique identifier of the price in the pricing domain.\n"
        },
        "impactingPriceParameter" : {
          "type" : "array",
          "description" : "The parameters that impact the price\n",
          "items" : {
            "$ref" : "#/definitions/PriceParam"
          }
        },
        "appliedTax" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AppliedTax"
          }
        },
        "extensions" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object",
            "properties" : { },
            "x-amdocs" : {
              "refDefinition" : "PriceExtensions"
            }
          }
        }
      },
      "description" : "The price of current catalog item. It is set to null if the price record is\nmissing or if there is any exception.\n"
    },
    "Money" : {
      "type" : "object",
      "properties" : {
        "unit" : {
          "type" : "string",
          "description" : "The currency of the price\n"
        },
        "value" : {
          "type" : "number",
          "description" : "The amount of the price\n"
        }
      },
      "description" : "The price and currency of the catalog item\n"
    },
    "PriceParam" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string",
          "description" : "The type of the parameter\n"
        },
        "name" : {
          "type" : "string",
          "description" : "The name of the parameter\n"
        },
        "value" : {
          "type" : "string",
          "description" : "The value of the parameter\n"
        }
      },
      "description" : "The parameters that may impact/impact the price\n"
    },
    "AppliedTax" : {
      "type" : "object",
      "required" : [ "taxAmount", "taxDefinition", "taxableAmount" ],
      "properties" : {
        "taxDefinition" : {
          "$ref" : "#/definitions/TaxDefinition"
        },
        "taxAmount" : {
          "$ref" : "#/definitions/Money"
        },
        "taxableAmount" : {
          "$ref" : "#/definitions/Money"
        },
        "exemptAmount" : {
          "$ref" : "#/definitions/Money"
        },
        "periodCoverage" : {
          "$ref" : "#/definitions/TimePeriod"
        },
        "characteristic" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Characteristic"
          }
        },
        "extensions" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object",
            "properties" : { },
            "x-amdocs" : {
              "refDefinition" : "AppliedTaxExtensions"
            }
          }
        }
      },
      "description" : "Calculated tax response"
    },
    "TaxDefinition" : {
      "type" : "object",
      "required" : [ "exemptionType", "isExemption", "taxJurisdiction", "taxRate", "taxType", "vaidFor" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "The display name of tax type"
        },
        "taxRate" : {
          "type" : "number",
          "format" : "float",
          "description" : "Rate of tax"
        },
        "taxType" : {
          "type" : "string",
          "description" : "VAT/GST etc"
        },
        "category" : {
          "type" : "string",
          "description" : "Luxury/Standard etc"
        },
        "isExemption" : {
          "type" : "boolean",
          "description" : "Where the tax definition has exemption defined on it"
        },
        "exemptionType" : {
          "type" : "string",
          "description" : "Exemption type. Valid Values - Customer, Service, Jurisdiction, None."
        },
        "vaidFor" : {
          "$ref" : "#/definitions/TimePeriod"
        },
        "taxJurisdiction" : {
          "$ref" : "#/definitions/TaxJurisdiction"
        },
        "extensions" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object",
            "properties" : { },
            "x-amdocs" : {
              "refDefinition" : "TaxDefinitionExtensions"
            }
          }
        }
      },
      "description" : "Tax definition"
    },
    "TimePeriod" : {
      "type" : "object",
      "properties" : {
        "startDateTime" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Start date and time of the period\n"
        },
        "endDateTime" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "End date and time of the period\n"
        },
        "extensions" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object",
            "properties" : { }
          },
          "x-amdocs" : {
            "refDefinition" : "TimePeriodExtensions"
          }
        }
      },
      "description" : "Time period\n"
    },
    "TaxJurisdiction" : {
      "type" : "object",
      "required" : [ "level", "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "level" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "extensions" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object",
            "properties" : { },
            "x-amdocs" : {
              "refDefinition" : "TaxJurisdictionExtensions"
            }
          }
        }
      }
    },
    "Characteristic" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        },
        "valueType" : {
          "type" : "string",
          "description" : "Value type of the characteristic\n"
        }
      }
    },
    "PriceAlteration" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "Name of the price, for example, Subscription Price\n"
        },
        "description" : {
          "type" : "string",
          "description" : "Detailed description of the price of the entity \n"
        },
        "unitOfMeasure" : {
          "type" : "string",
          "description" : "Unit of measurement of the price. This property is populated if the price type is allowance, such as gigabytes, minutes, and so on.\n"
        },
        "recurringChargePeriod" : {
          "type" : "string",
          "description" : "Recurring charge period. This property is populated if the price type is Recurring.\n"
        },
        "recurringChargePeriodLength" : {
          "type" : "integer",
          "description" : "The period length of the recurring charge\n"
        },
        "priceType" : {
          "type" : "string",
          "description" : "Category of the price, for example, allowance, recurring, and so on\n"
        },
        "applicationDuration" : {
          "type" : "integer",
          "description" : "Duration of the price\n"
        },
        "priority" : {
          "type" : "integer",
          "description" : "Priority of the price\n"
        },
        "alterationType" : {
          "type" : "string",
          "description" : "Type of the alteration\n"
        },
        "promotionActionId" : {
          "type" : "string",
          "description" : "Unique identifier of the promotion action triggering this price alteration\n"
        },
        "immediatePromotionId" : {
          "type" : "string",
          "description" : "Unique identifier of the promotion instance\n"
        },
        "alterationProductOfferingPriceId" : {
          "type" : "string",
          "description" : "Unique identifier of the product offering price on behalf of which the price alteration was given\n"
        },
        "alterationBundleProductOfferingId" : {
          "type" : "string",
          "description" : "Unique identifier of the bundle product offering on behalf of which the price alteration was given\n"
        },
        "alterationApplyOrder" : {
          "type" : "integer",
          "description" : "Order of the alteration price appliance\n"
        },
        "@type" : {
          "type" : "string",
          "description" : "Type of the resource\n"
        },
        "chargeType" : {
          "type" : "string",
          "description" : "Charge type represented by the price alteration. The supported values are&#58;<ul><li>debit<li>discount<li>credit</ul> \n"
        },
        "price" : {
          "$ref" : "#/definitions/Price"
        },
        "extensions" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object",
            "properties" : { }
          },
          "x-amdocs" : {
            "refDefinition" : "PriceAlterationExtensions"
          }
        }
      },
      "description" : "An amount, usually of money, that modifies the price charged for an  item\n"
    },
    "ImmediatePayOption" : {
      "type" : "object",
      "properties" : {
        "payOption" : {
          "type" : "string",
          "description" : "The immediate pay option:\n<ul>\n<li> *MUST* - The price must be paid immediately\n<li> *MAY* - The price might be paid immediately\n</ul>\n"
        },
        "payAmount" : {
          "$ref" : "#/definitions/Money"
        },
        "minPayAmount" : {
          "$ref" : "#/definitions/Money"
        },
        "payImmediately" : {
          "type" : "boolean",
          "description" : "Indicates whether the prcie included in the immediate payment.\nIf the pay option is set to MUST, this indication is set to true.\nIf the pay option is set to MAY, this indication is set to either true or false based on a customer decission.\n"
        },
        "extensions" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object",
            "properties" : { },
            "x-amdocs" : {
              "refDefinition" : "ImmediatePayOptionExtensions"
            }
          }
        }
      },
      "description" : "The payment options for the product offering price payment. The payment options can indicate whether the price must or might be paid immediatelly.\nIn addition, the payment options include an indication whether the price should be included in the immediate payment or not.\nIf the payment option is set to must, this indication is set to true. Otherwise, if the payment option is set to might, the indication is set to either\ntrue or false based on a customer decission.\n"
    },
    "InstallmentOption" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "The identifier of the installment option\n"
        },
        "installmentOption" : {
          "type" : "string",
          "description" : "Indicates if installment options are optional / mandatory for the price\n",
          "readOnly" : true
        },
        "numberOfInstallments" : {
          "type" : "integer",
          "description" : "The number of installments\n"
        },
        "downPayment" : {
          "$ref" : "#/definitions/PaymentAmount"
        },
        "extensions" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object",
            "properties" : { },
            "x-amdocs" : {
              "refDefinition" : "InstallmentOptionExtensions"
            }
          }
        }
      },
      "description" : "Represents an installment option for an  price\n"
    },
    "PaymentAmount" : {
      "type" : "object",
      "properties" : {
        "amount" : {
          "$ref" : "#/definitions/Money"
        },
        "percentage" : {
          "type" : "number",
          "format" : "float",
          "description" : "Represents the percentage that the amount represents out of the price\n"
        },
        "taxIncludedAmount" : {
          "$ref" : "#/definitions/Money"
        },
        "dutyFreeAmount" : {
          "$ref" : "#/definitions/Money"
        },
        "extensions" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object",
            "properties" : { },
            "x-amdocs" : {
              "refDefinition" : "PaymentAmountExtensions"
            }
          }
        }
      },
      "description" : "Represents a payment amount\n"
    },
    "ModifyReason" : {
      "type" : "object",
      "required" : [ "action", "name" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "Name of the modification reason\n"
        },
        "reasonText" : {
          "type" : "string",
          "description" : "Text of the modification reason. This property is populated if the type of the modification reason requires an input of a free text.\n"
        },
        "action" : {
          "type" : "string",
          "description" : "Action performed on the instance of the product offering\n"
        },
        "actionDuration" : {
          "$ref" : "#/definitions/DurationPolicy"
        },
        "extensions" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object",
            "properties" : { }
          },
          "x-amdocs" : {
            "refDefinition" : "ModifyReasonExtensions"
          }
        }
      },
      "description" : "Modification reason associated with the action performed on the product offering that is related to the order item\n"
    },
    "DurationPolicy" : {
      "type" : "object",
      "properties" : {
        "duration" : {
          "$ref" : "#/definitions/Quantity"
        },
        "startDatePolicy" : {
          "type" : "string",
          "description" : "Start date of the policy, from which the duration is calculated\n"
        },
        "endDatePolicy" : {
          "type" : "string",
          "description" : "End date of the policy, until which the duration is calculated\n"
        },
        "effectiveFor" : {
          "$ref" : "#/definitions/TimePeriod"
        },
        "terminationPolicy" : {
          "type" : "string",
          "description" : "Defines the termination policy upon duration end date\n"
        },
        "extensions" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object",
            "properties" : { },
            "x-amdocs" : {
              "refDefinition" : "DurationPolicyExtensions"
            }
          }
        }
      },
      "description" : "Policy for calculting a limited duration for any entity\n"
    },
    "Quantity" : {
      "type" : "object",
      "properties" : {
        "units" : {
          "type" : "string",
          "description" : "Units that are associated with the quantity\n"
        },
        "amount" : {
          "type" : "number",
          "description" : "Amount that is associated with the quantity\n"
        },
        "extensions" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object",
            "properties" : { }
          },
          "x-amdocs" : {
            "refDefinition" : "QuantityExtensions"
          }
        }
      },
      "description" : "Quantity of a resource\n"
    },
    "OrderItemRelationship" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Unique identifier of the referenced order item\n"
        },
        "type" : {
          "type" : "string",
          "description" : "Type of the relationship to the related order item\n"
        },
        "externalId" : {
          "type" : "string",
          "description" : "External ID of the referenced order item.\nThis value is used if the referenced order item is not persisted yet (that is, no ID was assigned for it). The *id* attribute, if set, takes precedence over the external ID.\n"
        },
        "extensions" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object",
            "properties" : { }
          },
          "x-amdocs" : {
            "refDefinition" : "OrderItemRelationshipExtensions"
          }
        }
      },
      "description" : "Relationship between order items\n"
    },
    "ProductOfferingRef" : {
      "type" : "object",
      "required" : [ "id" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Unique identifier of the product offering\n"
        },
        "href" : {
          "type" : "string",
          "description" : "Hypertext reference to the product offering\n"
        },
        "name" : {
          "type" : "string",
          "description" : "Name of the product offering\n"
        },
        "@referredType" : {
          "type" : "string",
          "description" : "Name of the type of the referred resource entity\n"
        },
        "productOfferingType" : {
          "type" : "string",
          "description" : "Type of the product offering\n"
        },
        "productOfferingTypeGroup" : {
          "type" : "string",
          "description" : "The type of the product offering group\n"
        },
        "productOfferingClassification" : {
          "type" : "string",
          "description" : "The classification of the product offering. Valid values: customerOffer, subscriberMainOffer, subscriberOffer\n"
        },
        "serialized" : {
          "type" : "boolean",
          "description" : "Indicates whether the product offering is maintained per instance or can represent a bulk quantity\n"
        },
        "primary" : {
          "type" : "boolean",
          "description" : "Indicates whether the product offering has a business significance for the customer&#58;\n- It is reflected as a product for the customer and it is actionable - the customer can perform ordering actions on it\n- An action performed on a primary offer can impact the actions available for its bundled or dependent offers (for example, when ownership of a primary offer is changed some internal offers cannot be added or removed)\n"
        },
        "version" : {
          "type" : "string",
          "description" : "Version of the product offering\n"
        },
        "valueRank" : {
          "type" : "integer",
          "description" : "Value rank of the product offering\n"
        },
        "attachment" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Attachment"
          }
        },
        "durationPolicy" : {
          "$ref" : "#/definitions/DurationPolicy"
        }
      },
      "description" : "Reference to the product offering entities that are orderable from the provider of the catalog. The resource includes pricing information.\n"
    },
    "Attachment" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Unique Identifier of the attachment"
        },
        "href" : {
          "type" : "string",
          "description" : "Hypertext reference to the individual."
        },
        "name" : {
          "type" : "string",
          "description" : "Name of the Attachment"
        },
        "description" : {
          "type" : "string",
          "description" : "Attachment description"
        },
        "type" : {
          "type" : "string",
          "description" : "Identifies the type of the attachment - identity, invoice, quote etc.\n"
        },
        "mimeType" : {
          "type" : "string",
          "description" : "Attachment mimeType"
        },
        "size" : {
          "type" : "number",
          "description" : "Size of the Attachment"
        },
        "sizeUnit" : {
          "type" : "string",
          "description" : "Unit of measure for size ( bytes, kiloBytes etc.)"
        },
        "url" : {
          "type" : "string",
          "description" : "URL/location of the attachment in underlying document management system.\n"
        },
        "relatedEntity" : {
          "$ref" : "#/definitions/EntityRef"
        },
        "validFor" : {
          "$ref" : "#/definitions/TimePeriod"
        }
      },
      "description" : "Attachment resource"
    },
    "EntityRef" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Unique identifier of the related entity"
        },
        "href" : {
          "type" : "string",
          "description" : "Hypertext reference to the related entity"
        },
        "name" : {
          "type" : "string",
          "description" : "Name of the related entity"
        },
        "description" : {
          "type" : "string",
          "description" : "Description of the related entity"
        },
        "referredType" : {
          "type" : "string",
          "description" : "Type of the related entity (e.g. individual, bill, product, account etc.). Always in lower case.\n"
        }
      },
      "description" : "Describes a reference to an entity to which the attachment is associated\n"
    },
    "Product" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Unique identifier of the product\n"
        },
        "href" : {
          "type" : "string",
          "description" : "Hypertext reference to the product\n"
        },
        "name" : {
          "type" : "string",
          "description" : "Name of the product\n"
        },
        "referenceId" : {
          "type" : "string",
          "description" : "Reference ID of the product\n"
        },
        "status" : {
          "type" : "string",
          "description" : "State of the product in the Product Inventory subdomain\n"
        },
        "version" : {
          "type" : "string",
          "description" : "Version of the product in the Product Inventory subdomain\n"
        },
        "primaryProductId" : {
          "type" : "string",
          "description" : "Unique identifier of the primary product. This property is populated only when the product is a product reference for the *Enable By* relation, and the referenced product is a product in the inventory and is not part of the order. In this case, the property contains the ID of the product ancestor that is marked as primary. This property and *productOrderRef* are mutually exclusive.\n"
        },
        "activationDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date on which the product was activated\n"
        },
        "terminationDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date on which the product is terminated\n"
        },
        "alternateId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Alternate identifier of the product\n"
        },
        "relatedParty" : {
          "type" : "array",
          "description" : "Party associated with the product\n",
          "items" : {
            "$ref" : "#/definitions/RelatedPartyRef"
          }
        },
        "productSpecification" : {
          "$ref" : "#/definitions/ProductSpecificationRef"
        },
        "characteristic" : {
          "type" : "array",
          "description" : "Characteristic of the product\n",
          "items" : {
            "$ref" : "#/definitions/ProductCharacteristic"
          }
        },
        "place" : {
          "type" : "array",
          "description" : "Place of the product\n",
          "items" : {
            "$ref" : "#/definitions/PlaceRef"
          }
        },
        "productRelationship" : {
          "type" : "array",
          "description" : "Relationship of the product\n",
          "items" : {
            "$ref" : "#/definitions/ProductRelationship"
          }
        },
        "metadata" : {
          "type" : "array",
          "description" : "Product specification metadata\n",
          "items" : {
            "$ref" : "#/definitions/Metadata"
          }
        },
        "productOrder" : {
          "$ref" : "#/definitions/ProductOrderRef"
        },
        "extensions" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object",
            "properties" : { }
          },
          "x-amdocs" : {
            "refDefinition" : "ProductExtensions"
          }
        }
      },
      "description" : "An owned product or a product to be provided \n"
    },
    "ProductSpecificationRef" : {
      "type" : "object",
      "required" : [ "id" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Unique identifier of the product specification\n"
        },
        "href" : {
          "type" : "string",
          "description" : "Hypertext reference to the product specification\n"
        },
        "version" : {
          "type" : "string",
          "description" : "Version of the product specification\n"
        },
        "name" : {
          "type" : "string",
          "description" : "Name of the product specification\n"
        },
        "productSpecificationType" : {
          "type" : "string",
          "description" : "Type of the product specification\n"
        }
      },
      "description" : "Detailed information of a tangible or intangible object that is made available externally in the form of a product offering to customers or other parties playing a party role\n"
    },
    "ProductCharacteristic" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "Name of the product characteristic\n"
        },
        "value" : {
          "type" : "string",
          "description" : "Value of the product characteristic\n"
        },
        "valueType" : {
          "type" : "string",
          "description" : "Value type of the product characteristic\n"
        },
        "@type" : {
          "type" : "string",
          "description" : "Type of the resource - *ProductCharacteristic*\n"
        },
        "metadata" : {
          "type" : "array",
          "description" : "Metadata of the product characteristic\n",
          "items" : {
            "$ref" : "#/definitions/Metadata"
          }
        },
        "valueMetadata" : {
          "type" : "array",
          "description" : "Metadata of the product characteristic value\n",
          "items" : {
            "$ref" : "#/definitions/ValueMetadata"
          }
        },
        "extensions" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object",
            "properties" : { }
          },
          "x-amdocs" : {
            "refDefinition" : "ProductCharacteristicExtensions"
          }
        }
      },
      "description" : "Characteristics of the product to instantiate or to modify\n"
    },
    "Metadata" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "Name of the metadata\n"
        },
        "value" : {
          "type" : "string",
          "description" : "Value of the metadata\n"
        },
        "metadataType" : {
          "type" : "string",
          "description" : "Type of the metadata\n"
        },
        "extensions" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object",
            "properties" : { }
          },
          "x-amdocs" : {
            "refDefinition" : "MetadataExtensions"
          }
        }
      },
      "description" : "Catalog and operational metadata\n"
    },
    "ValueMetadata" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Metadata"
      }, {
        "type" : "object",
        "properties" : {
          "sourceValue" : {
            "type" : "string",
            "description" : "Value of the metadata source\n"
          }
        }
      } ],
      "description" : "Catalog and operational metadata\n"
    },
    "PlaceRef" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Unique identifier of the place\n"
        },
        "href" : {
          "type" : "string",
          "description" : "Hypertext reference to the place\n"
        },
        "name" : {
          "type" : "string",
          "description" : "User-friendly name for the place, such as Paris Store, Main Home, and so on\n"
        },
        "role" : {
          "type" : "string",
          "description" : "Role of the place\n"
        },
        "@referredType" : {
          "type" : "string",
          "description" : "Name of the type of the referred resource entity\n"
        }
      },
      "description" : "Places where the products are sold or delivered\n"
    },
    "ProductRelationship" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string",
          "description" : "Type of the relationship\n"
        },
        "subtype" : {
          "type" : "string",
          "description" : "Specific relation entity subtype. Relevant for several relation types \n"
        },
        "product" : {
          "$ref" : "#/definitions/Product"
        },
        "extensions" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object",
            "properties" : { }
          },
          "x-amdocs" : {
            "refDefinition" : "ProductRelationshipExtensions"
          }
        }
      },
      "description" : "Relationship to another product\n"
    },
    "ProductOrderRef" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Unique identifier of the product order\n"
        },
        "href" : {
          "type" : "string",
          "description" : "Hypertext reference to the product order\n"
        },
        "validation" : {
          "$ref" : "#/definitions/Validation"
        },
        "orderItemId" : {
          "type" : "string",
          "description" : "The ID of the order item\n"
        }
      },
      "description" : "Reference to the product order\n"
    },
    "Validation" : {
      "type" : "object",
      "properties" : {
        "status" : {
          "type" : "string",
          "description" : "Validation status\n",
          "readOnly" : true
        },
        "validationMessage" : {
          "type" : "array",
          "description" : "Validation message\n",
          "readOnly" : true,
          "items" : {
            "$ref" : "#/definitions/ValidationMessage"
          }
        },
        "configurationChange" : {
          "type" : "array",
          "description" : "Configuration change\n",
          "readOnly" : true,
          "items" : {
            "$ref" : "#/definitions/ConfigurationChange"
          }
        },
        "extensions" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object",
            "properties" : { }
          },
          "x-amdocs" : {
            "refDefinition" : "ValidationExtensions"
          }
        }
      },
      "description" : "Validation result that is associated with the product order\n"
    },
    "ValidationMessage" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Non-localized name identifier of the validation message\n"
        },
        "text" : {
          "type" : "string",
          "description" : "Localized descriptive validation message\n"
        },
        "type" : {
          "type" : "string",
          "description" : "Type of the validation message\n"
        },
        "subtype" : {
          "type" : "string",
          "description" : "Distinct code which represents the issue\n"
        },
        "parameter" : {
          "type" : "array",
          "description" : "Name/value pair of the validation message\n",
          "items" : {
            "$ref" : "#/definitions/ValidationMessageParameter"
          }
        },
        "severity" : {
          "type" : "string",
          "description" : "Severity of the validation message\n"
        },
        "path" : {
          "type" : "string",
          "description" : "Path to the resource part to which the validation message is related\n"
        },
        "resource" : {
          "type" : "array",
          "description" : "Resource that is associated with the message\n",
          "items" : {
            "$ref" : "#/definitions/RelatedResource"
          }
        }
      },
      "description" : "Message associated with the validation failure\n"
    },
    "ValidationMessageParameter" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "Name of the parameter\n"
        },
        "value" : {
          "type" : "array",
          "description" : "Value of the parameter\n",
          "items" : {
            "type" : "string"
          }
        }
      },
      "description" : "Name/value pair of the validation message parameter\n"
    },
    "RelatedResource" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string",
          "description" : "Type of the resource\n"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier of the resource\n"
        },
        "variable" : {
          "type" : "array",
          "description" : "Variables related to the resource\n",
          "items" : {
            "$ref" : "#/definitions/Variable"
          }
        },
        "containedResource" : {
          "type" : "array",
          "description" : "Other resources, specs, or offers that are linked to the message but did not trigger the validation message\n",
          "items" : {
            "$ref" : "#/definitions/ContainedResource"
          }
        }
      },
      "description" : "Resource that is associated with the validation message (that is, triggered the validation failure)\n"
    },
    "Variable" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string",
          "description" : "Type of the variable\n"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier of the variable\n"
        },
        "value" : {
          "type" : "array",
          "description" : "Value(s) of the variable\n",
          "items" : {
            "type" : "string"
          }
        }
      },
      "description" : "Variable that is associated with a resource\n"
    },
    "ContainedResource" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string",
          "description" : "Type of the resource\n"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier of the resource\n"
        },
        "variable" : {
          "type" : "array",
          "description" : "Variables that are related to the resource\n",
          "items" : {
            "$ref" : "#/definitions/Variable"
          }
        }
      },
      "description" : "Resources that are contained in the validation message\n"
    },
    "ConfigurationChange" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Unique identifier of the configuration change\n",
          "readOnly" : true,
          "x-dox-DesignNote" : "A unique identifier of the validation rule or its message.\n"
        },
        "text" : {
          "type" : "string",
          "description" : "Localized descriptive configuration change message\n",
          "readOnly" : true
        },
        "type" : {
          "type" : "string",
          "description" : "Implementation discriminator of the configuration change\n",
          "readOnly" : true
        },
        "parameter" : {
          "type" : "array",
          "readOnly" : true,
          "items" : {
            "$ref" : "#/definitions/ConfigurationChangeParameter"
          }
        },
        "severity" : {
          "type" : "string",
          "description" : "Severity of the configuration change\n",
          "readOnly" : true
        },
        "path" : {
          "type" : "string",
          "description" : "Path to the configuration change in the resource model\n",
          "readOnly" : true
        },
        "skipRevalidation" : {
          "type" : "boolean",
          "description" : "Indicates whether revalidation of the configuration change is required\n",
          "readOnly" : true
        },
        "patchElement" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PatchElement"
          }
        },
        "configurationChangeSource" : {
          "type" : "array",
          "description" : "Holds a list of the impacting components that are involved in action rule\n- enablmentRelation - The action rule has impacting enablment relation functionality or was created by this functionality.\n- commertialRelation - The action rule has impacting commertial relation functionality or was created by this functionality.\n- subscriptionRelation - The action rule has impacting subscription relation or was created by this functionality. functionality\n- catalog - The action rule was created by catalog.\n",
          "items" : {
            "type" : "string"
          }
        }
      },
      "description" : "Configuration change recommended for a validated resource\n"
    },
    "ConfigurationChangeParameter" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "Name of the parameter\n",
          "readOnly" : true
        },
        "value" : {
          "type" : "array",
          "description" : "Value(s) of the parameter\n",
          "readOnly" : true,
          "items" : {
            "type" : "string"
          }
        },
        "valueType" : {
          "type" : "string",
          "description" : "Types of each Value in the parameter array\nAs a default - when empty - the type is string.\nAlso will be supported-\n** HashMap - a jason format representation of key value <string,string> map.\n"
        }
      },
      "description" : "Name/value pair of the configuration change parameters\n"
    },
    "PatchElement" : {
      "properties" : {
        "op" : {
          "type" : "string",
          "description" : "Operation that is associated with the patched resource part. Valid values are *add*, *remove*, or *replace*.\n"
        },
        "path" : {
          "type" : "string",
          "description" : "Path of this resource part within the patched resource, for example, */note*, */name*, or */orderItem/quantity*\n"
        },
        "value" : {
          "type" : "object",
          "description" : "Value of the patched resource part\n",
          "properties" : { }
        }
      },
      "description" : "Patched resource part\n"
    },
    "AppointmentRef" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Unique identifier of the appointment\n"
        },
        "href" : {
          "type" : "string",
          "description" : "Hypertext reference to the appointment\n"
        },
        "@referredType" : {
          "type" : "string",
          "description" : "Name of the type of the referred resource entity\n"
        }
      },
      "description" : "Reference to the appointment information that is captured if a product order item requires an appointment between the service provider and the customer.\n"
    },
    "ProductOfferingGroupOption" : {
      "type" : "object",
      "properties" : {
        "groupOptionId" : {
          "type" : "string",
          "description" : "Unique identifier of the product offering group option in the product catalog\n"
        },
        "extensions" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object",
            "properties" : { }
          },
          "x-amdocs" : {
            "refDefinition" : "ProductOfferingGroupOptionExtensions"
          }
        }
      },
      "description" : "Reference to the product offering group option from the product catalog\n"
    },
    "OrderTerm" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "Name of the product order commitment term\n"
        },
        "description" : {
          "type" : "string",
          "description" : "Description of the product order commitment term\n"
        },
        "duration" : {
          "$ref" : "#/definitions/Quantity"
        },
        "remainingDuration" : {
          "$ref" : "#/definitions/Quantity"
        },
        "elapsedDuration" : {
          "$ref" : "#/definitions/Quantity"
        },
        "@type" : {
          "type" : "string",
          "description" : "Type of the resource\n"
        },
        "validFor" : {
          "$ref" : "#/definitions/TimePeriod"
        },
        "freezeDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date on which the commitment was frozen due to an action performed on the product\n"
        },
        "impactType" : {
          "type" : "string",
          "description" : "Type of the impact on the term of the order item due to an action performed on the product  \n"
        },
        "policyId" : {
          "type" : "string",
          "description" : "Unique identifier of the order item term policy\n"
        },
        "attachment" : {
          "type" : "array",
          "description" : "Attachment of the product\n",
          "items" : {
            "$ref" : "#/definitions/Attachment"
          }
        },
        "metadata" : {
          "type" : "array",
          "description" : "Metadata of the product order commitment term\n",
          "items" : {
            "$ref" : "#/definitions/Metadata"
          }
        },
        "extensions" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object",
            "properties" : { }
          },
          "x-amdocs" : {
            "refDefinition" : "OrderTermExtensions"
          }
        }
      },
      "description" : "Commitment with duration. Either a duration or a name must be provided.\n",
      "x-dox-DesignNote" : "In practice it stands for Commitment Term (in the future other types of terms may be supported)\n"
    },
    "PaymentRef" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Unique identifier of the payment\n"
        },
        "href" : {
          "type" : "string",
          "description" : "Hypertext reference to the payment\n"
        },
        "name" : {
          "type" : "string",
          "description" : "Name of a payment\n"
        },
        "@referredType" : {
          "type" : "string",
          "description" : "Name of the type of the referred resource entity\n"
        }
      },
      "description" : "Reference to the immediate payment information that is captured for the product order if such payment was performed at the product order submission\n"
    },
    "RelatedImmediatePromotion" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Unique identifier of the immediate promotion\n"
        },
        "itemQualificationType" : {
          "type" : "string",
          "description" : "Type of the qualification result for an item - *trigger* or *benefit*\n"
        },
        "itemStatus" : {
          "type" : "string",
          "description" : "Status of the item in the promotion:\n- *add* - A new item in the product promotion\n- *keep* - An existing item that remains as the result of reevaluation in the product promotion\n- *revoke* - An existing item that is revoked as the result of reevaluation in the product promotion\n"
        },
        "extensions" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object",
            "properties" : { }
          },
          "x-amdocs" : {
            "refDefinition" : "RelatedImmediatePromotionExtensions"
          }
        }
      },
      "description" : "Reference to the full immediate promotion\n"
    },
    "StockItem" : {
      "type" : "object",
      "properties" : {
        "stockAvailabilityStatus" : {
          "type" : "string",
          "description" : "Stock availability levels for the product - *inStock*, *outOfStock*, *lowStock*, and *unavailable*\n"
        },
        "stockAvailabilityQuantity" : {
          "type" : "integer",
          "description" : "Actual number of items in stock for this product\n"
        },
        "extensions" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object",
            "properties" : { }
          },
          "x-amdocs" : {
            "refDefinition" : "StockItemExtensions"
          }
        }
      },
      "description" : "Stock information of the product in the stock management system\n"
    },
    "ProductStockReservationRef" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Unique identifier of the stock reservation\n"
        }
      },
      "description" : "Reference to the stock reservation\n"
    },
    "ExternalIdentifier" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string",
          "description" : "Type of the external system\n"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier in the external system\n"
        },
        "version" : {
          "type" : "string",
          "description" : "Version of the related entity in the external system\n"
        },
        "extensions" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object",
            "properties" : { }
          },
          "x-amdocs" : {
            "refDefinition" : "ExternalIdentifierExtensions"
          }
        }
      },
      "description" : "Reference to an external system identifier\n"
    },
    "Note" : {
      "type" : "object",
      "required" : [ "text" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Identifier of the note\n",
          "readOnly" : true
        },
        "noteType" : {
          "type" : "string",
          "description" : "Type of the note\n"
        },
        "date" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date of the note\n"
        },
        "text" : {
          "type" : "string",
          "description" : "Text of the note\n"
        },
        "extensions" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object",
            "properties" : { },
            "x-amdocs" : {
              "refDefinition" : "NoteExtensions"
            }
          }
        }
      },
      "description" : "Extra information about a given entity\n"
    },
    "ChannelRef" : {
      "type" : "object",
      "required" : [ "id" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Unique identifier of the channel\n"
        },
        "href" : {
          "type" : "string",
          "description" : "Hypertext reference to the channel\n"
        },
        "name" : {
          "type" : "string",
          "description" : "Name of the channel\n"
        },
        "role" : {
          "type" : "string",
          "description" : "Role of the channel, for example, *initChannel*\n"
        },
        "@type" : {
          "type" : "string",
          "description" : "Type of the resource\n"
        }
      },
      "description" : "Channel associated with a resource\n"
    },
    "ImmediatePromotion" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Unique identifier of the immediate promotion\n"
        },
        "status" : {
          "type" : "string",
          "description" : "Status of the instance of the immediate promotion\n"
        },
        "state" : {
          "type" : "string",
          "description" : "The apply state of the qualified promotion. The state can have the following values:\n- 'applied' - For an immediate promotion that all of it's benefits are applied\n- 'notApplied' - For an immediate promotion that none of it's benefits are applied - future\n- 'partiallyApplied' - For an immediate promotion that part of it's benefits are applied - future\n- 'pendingApply' - Received in the request for an immediate promotion for which certain benefits, which are selected externally by a consuming application, should be applied\n"
        },
        "promotion" : {
          "$ref" : "#/definitions/PromotionRef"
        },
        "productPromotion" : {
          "$ref" : "#/definitions/ProductPromotionRef"
        },
        "triggerItem" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/TriggerItem"
          },
          "x-dox-DesignNote" : "A reference to the TriggerItem  definition.\n"
        },
        "benefitItem" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/BenefitItem"
          },
          "x-dox-DesignNote" : "A reference to the Benefit definition.\n"
        },
        "immediatePromotionCharacteristic" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ContextCharacteristic"
          }
        },
        "reason" : {
          "$ref" : "#/definitions/ModifyReason"
        },
        "relatedParty" : {
          "$ref" : "#/definitions/RelatedPartyRef"
        },
        "extensions" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object",
            "properties" : { }
          },
          "x-amdocs" : {
            "refDefinition" : "ImmediatePromotionExtensions"
          }
        }
      },
      "description" : "Immediate promotion\n"
    },
    "PromotionRef" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Unique identifier of the promotion\n"
        },
        "name" : {
          "type" : "string",
          "description" : "Name of the promotion\n"
        },
        "description" : {
          "type" : "string",
          "description" : "Promotion description for a business user\n"
        },
        "validFor" : {
          "$ref" : "#/definitions/TimePeriod"
        },
        "type" : {
          "type" : "string",
          "description" : "The type of the promotion\n"
        },
        "priority" : {
          "type" : "integer",
          "description" : "The priority of the promotion\n"
        },
        "applyPolicy" : {
          "type" : "string",
          "description" : "Defines the policy to apply the promotion - can be manual or automatic \n"
        },
        "href" : {
          "type" : "string",
          "format" : "url",
          "description" : "Hypertext reference to the promotion\n",
          "readOnly" : true
        }
      },
      "description" : "Reference to the promotion\n",
      "x-dox-DesignNote" : "Promotion description for a business user\n"
    },
    "ProductPromotionRef" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Unique identifier of the product promotion\n"
        },
        "href" : {
          "type" : "string",
          "format" : "url",
          "description" : "Hypertext reference to the product promotion\n",
          "readOnly" : true
        }
      },
      "description" : "Reference to the product promotion.\n",
      "x-dox-DesignNote" : "Product Promotion description for Business user\n"
    },
    "TriggerItem" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Unique identifier of the trigger item\n"
        },
        "href" : {
          "type" : "string",
          "format" : "url",
          "description" : "Hypertext reference to the trigger item\n"
        },
        "itemType" : {
          "type" : "string",
          "description" : "Type of the trigger item\n"
        },
        "promotionCriteriaGroupId" : {
          "type" : "string",
          "description" : "Unique identifier of the promotion criteria group (root or nested) as part of which this item is qualified as trigger item\n"
        },
        "itemStatus" : {
          "type" : "string",
          "description" : "Status of the trigger item in the promotion&#58;\n- *add* - A new trigger item in the product promotion\n- *keep* - An existing trigger item that remains as the result of reevaluation in the product promotion\n- *revoke* - An existing trigger item that is revoked as the result of reevaluation in the product promotion\n"
        },
        "pathToRoot" : {
          "type" : "string",
          "description" : "Path from the current item in the product offering structure to the root. Populated if the trigger item is a nested item.\n"
        },
        "triggerItemCharacteristic" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ContextCharacteristic"
          }
        },
        "extensions" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object",
            "properties" : { }
          },
          "x-amdocs" : {
            "refDefinition" : "TriggerItemExtensions"
          }
        }
      },
      "description" : "Item that participated in the promotion qualification\n"
    },
    "ContextCharacteristic" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "The name of the characteristic\n"
        },
        "contextType" : {
          "type" : "string",
          "description" : "The context type of the characteristic\n"
        },
        "valueType" : {
          "type" : "string",
          "description" : "The value type of the characteristic \n"
        },
        "value" : {
          "type" : "array",
          "description" : "The value of the characteristic\n",
          "items" : {
            "type" : "string"
          }
        }
      },
      "description" : "The list of dynamic characteristics related to a specific context\n"
    },
    "BenefitItem" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Unique identifier of the benefit item \n"
        },
        "href" : {
          "type" : "string",
          "description" : "Hypertext reference to the benefit item\n"
        },
        "itemType" : {
          "type" : "string",
          "description" : "Type of the benefit item\n"
        },
        "promotionCriteriaGroupId" : {
          "type" : "string",
          "description" : "Unique identifier of the promotion criteria group (root or nested) as part of which this item is qualified as a benefit item\n"
        },
        "itemStatus" : {
          "type" : "string",
          "description" : "Status of the benefit item in the promotion&#58;\n- *add* - A new benefit item in the product promotion\n- *keep* - An existing benefit item that remains as the result of reevaluation in the product promotion\n- *revoke* - An existing benefit item that is revoked as the result of reevaluation in the product promotion\n"
        },
        "itemState" : {
          "type" : "string",
          "description" : "The apply state of the benefit on a benefit item. The state can have the following values&#58;\n- 'applied' - For a benefit that is applied\n- 'notApplied' - For a benefit that is not applied\n- 'pendingApply' - Received in the request for a benefit, for which the relevant benefit item is selected and should be applied\n"
        },
        "pathToRoot" : {
          "type" : "string",
          "description" : "Path from the current item in the product offering structure to the root. Populated if the benefit item is a nested item.\n"
        },
        "action" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PromotionAction"
          },
          "x-dox-DesignNote" : "A reference to the Benefit definition.\n"
        },
        "extensions" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object",
            "properties" : { }
          },
          "x-amdocs" : {
            "refDefinition" : "BenefitItemExtensions"
          }
        }
      },
      "description" : "Item that received the promotion benefit, which is a benefit granted through the promotion - can be discount, allowance, free services\n"
    },
    "PromotionAction" : {
      "required" : [ "actionType" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Unique identifier of the promotion action\n"
        },
        "name" : {
          "type" : "string",
          "description" : "Name of the promotion action\n"
        },
        "description" : {
          "type" : "string",
          "description" : "Description of the promotion action\n"
        },
        "actionType" : {
          "type" : "string",
          "description" : "Type of the action. A valid value is *Price Alteration*, *Product Offering*.\n"
        },
        "actionValue" : {
          "type" : "integer",
          "description" : "Value of the action. If the *actionType* is Price Alteration, the action value is '1'.\n"
        },
        "promotionPriceAlteration" : {
          "$ref" : "#/definitions/ProductOfferingPriceRef"
        },
        "productOfferingBenefit" : {
          "type" : "array",
          "description" : "Reference to a product offering usaed as a free offer benefit by the promotion\n",
          "items" : {
            "$ref" : "#/definitions/ProductOfferingBenefit"
          }
        },
        "durationPolicy" : {
          "$ref" : "#/definitions/DurationPolicy"
        },
        "validFor" : {
          "$ref" : "#/definitions/TimePeriod"
        },
        "actionTerminationPolicy" : {
          "type" : "string",
          "description" : "Defines the termination policy upon duration end date\n"
        },
        "extensions" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object",
            "properties" : { }
          },
          "x-amdocs" : {
            "refDefinition" : "PromotionActionExtensions"
          }
        }
      },
      "description" : "Action of the promotion. Customers can receive benefits associated with the action if the conditions in the promotion pattern are fulfilled.\n"
    },
    "ProductOfferingPriceRef" : {
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Unique identifier of the product offering price\n"
        }
      },
      "description" : "Reference to the action discount. Represents a pricing entity that defines the actual discount for the product offering.\n"
    },
    "ProductOfferingBenefit" : {
      "type" : "object",
      "properties" : {
        "productOfferingId" : {
          "type" : "string",
          "description" : "the id of the product offering granted as a benefit\n"
        },
        "promotionPriceAlteration" : {
          "type" : "array",
          "description" : "referecne to price entity representing the actual monetary discount\n",
          "items" : {
            "$ref" : "#/definitions/ProductOfferingPriceRef"
          }
        },
        "extensions" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object",
            "properties" : { },
            "x-amdocs" : {
              "refDefinition" : "ProductOfferingBenefitExtensions"
            }
          }
        }
      },
      "description" : "Reference to a product offering used as a free offer benefit by the promotion"
    },
    "OrderRelationship" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Unique identifier of the product order\n"
        },
        "href" : {
          "type" : "string",
          "description" : "Hypertext reference to the product order\n"
        },
        "type" : {
          "type" : "string",
          "description" : "Relation type\n"
        }
      },
      "description" : "Relation to another product order\n"
    },
    "Error" : {
      "type" : "object",
      "required" : [ "code", "reason" ],
      "discriminator" : "@type",
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "Error code relevant to an application, defined in the API or in a common list\n"
        },
        "reason" : {
          "type" : "string",
          "description" : "Explanation of the reason for the error that can be displayed to a user\n"
        },
        "message" : {
          "type" : "string",
          "description" : "Additional information about the error  and corrective actions related to the error that can be displayed to a user\n"
        },
        "status" : {
          "type" : "string",
          "description" : "HTTP error code extension\n"
        },
        "referenceError" : {
          "type" : "string",
          "format" : "uri",
          "description" : "URI of the documentation describing the error\n"
        },
        "traceId" : {
          "type" : "string",
          "description" : "Unique tracker ID that is used to facilitate the troubleshooting\n"
        },
        "@type" : {
          "type" : "string",
          "description" : "Type of the error\n"
        },
        "characteristic" : {
          "type" : "array",
          "description" : "Charachteristic parameters that are associated with the error\n",
          "items" : {
            "$ref" : "#/definitions/ErrorCharacteristic"
          }
        }
      },
      "description" : "Error response. This object is used when an API throws an error, typically with a HTTP error response codes 3xx, 4xx, and 5xx\n"
    },
    "ErrorCharacteristic" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "Non-localized name identifier of the characteristic\n"
        },
        "value" : {
          "type" : "string",
          "description" : "Value of the characteristic\n"
        }
      },
      "description" : "Parameter that is associated with the error entity\n"
    },
    "ValidationError" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Error"
      }, {
        "properties" : {
          "validationMessage" : {
            "type" : "array",
            "description" : "The validation messages\n",
            "items" : {
              "$ref" : "#/definitions/ValidationMessage"
            }
          }
        }
      } ],
      "description" : "Validation error object that is used when an API throws an error, typically with a HTTP error response code 422\n"
    },
    "ProductOrderBillingAccountRelation" : {
      "type" : "object",
      "properties" : {
        "action" : {
          "type" : "string",
          "description" : "The requested action (add/replace/remove) of the billing account entity\n"
        },
        "billingAccount" : {
          "$ref" : "#/definitions/BillingAccountRef"
        },
        "orderItem" : {
          "type" : "array",
          "description" : "Order item that is related to the billing account or holds the price of the product order associated with the billing account\n",
          "items" : {
            "$ref" : "#/definitions/OrderItemBillingAccountRelation"
          }
        },
        "extensions" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object",
            "properties" : { }
          },
          "x-amdocs" : {
            "refDefinition" : "ProductOrderBillingAccountRelationExtensions"
          }
        }
      },
      "description" : "Association of the product order to a billing account\n"
    },
    "OrderItemBillingAccountRelation" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Unique identifier of the order item\n"
        },
        "action" : {
          "type" : "string",
          "description" : "Requested action (add/replace/remove) of the billing account entity\n"
        },
        "billingAccount" : {
          "$ref" : "#/definitions/BillingAccountRef"
        },
        "itemPrice" : {
          "type" : "array",
          "description" : "Price that is assigned to the relation of the billing account to the product order\n",
          "items" : {
            "$ref" : "#/definitions/OrderPriceBillingAccountRelation"
          }
        },
        "extensions" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object",
            "properties" : { }
          },
          "x-amdocs" : {
            "refDefinition" : "OrderItemBillingAccountRelationExtensions"
          }
        }
      },
      "description" : "Order item that is related to the billing account or holds the price of the product order associated with the billing account\n"
    },
    "OrderPriceBillingAccountRelation" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Unique identifier of the price\n"
        },
        "action" : {
          "type" : "string",
          "description" : "Requested action (add/replace/remove) of the billing account entity\n"
        },
        "billingAccount" : {
          "$ref" : "#/definitions/BillingAccountRef"
        },
        "extensions" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object",
            "properties" : { }
          },
          "x-amdocs" : {
            "refDefinition" : "OrderPriceBillingAccountRelationExtensions"
          }
        }
      },
      "description" : "Price that is assigned to the relation of the billing account to the product order\n"
    },
    "ProductRef" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Unique identifier of the product\n"
        },
        "version" : {
          "type" : "string",
          "description" : "Version of the product\n"
        },
        "status" : {
          "type" : "string",
          "description" : "State of the product in the Product Inventory subdomain\n"
        }
      },
      "description" : "Reference to an owned product or to a product to be provided\n"
    },
    "PhoneNumberProduct" : {
      "type" : "object",
      "properties" : {
        "isPortIn" : {
          "type" : "string",
          "description" : "Indicates whether the number is ported in\n"
        },
        "phoneNumber" : {
          "type" : "string",
          "description" : "Phone number that is used if this property is populated. If the number is ported in, this property can include the temporary number, or the number that is used permanently.\n"
        },
        "portedNumber" : {
          "type" : "string",
          "description" : "Number to which the customer wishes to port in\n"
        },
        "previousProvider" : {
          "type" : "string",
          "description" : "Former operator name/ID\n"
        },
        "resourceCategory" : {
          "type" : "string",
          "description" : "Type of the phone number\n"
        },
        "modifyReason" : {
          "$ref" : "#/definitions/ModifyReason"
        },
        "characteristic" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ProductCharacteristic"
          }
        },
        "extensions" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object",
            "properties" : { }
          },
          "x-amdocs" : {
            "refDefinition" : "PhoneNumberProductExtensions"
          }
        }
      },
      "description" : "Information about the phone number\n"
    },
    "DeliveryMethodProductOrder" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Unique identifier of the product order\n"
        },
        "deliveryMethodOrderItem" : {
          "type" : "array",
          "description" : "List of the active order items in the product order\n",
          "items" : {
            "$ref" : "#/definitions/DeliveryMethodOrderItem"
          }
        },
        "extensions" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object",
            "properties" : { }
          },
          "x-amdocs" : {
            "refDefinition" : "DeliveryMethodProductOrderExtensions"
          }
        }
      },
      "description" : "Product order for the delivery method\n"
    },
    "DeliveryMethodOrderItem" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Unique identifier of the order item\n"
        },
        "action" : {
          "type" : "string",
          "description" : "Action performed on the order item: add, replace, or remove\n"
        },
        "productOffering" : {
          "$ref" : "#/definitions/ProductOfferingRef"
        },
        "product" : {
          "$ref" : "#/definitions/Product"
        },
        "deliveringOrderItem" : {
          "type" : "array",
          "description" : "List of order items that must have the delivery method\n",
          "items" : {
            "$ref" : "#/definitions/DeliveringOrderItem"
          }
        },
        "appointment" : {
          "$ref" : "#/definitions/AppointmentRef"
        },
        "note" : {
          "type" : "array",
          "description" : "Extra information about the product order\n",
          "items" : {
            "$ref" : "#/definitions/Note"
          }
        },
        "extensions" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object",
            "properties" : { }
          },
          "x-amdocs" : {
            "refDefinition" : "DeliveryMethodOrderItemExtensions"
          }
        }
      },
      "description" : "Order item that contains the delivery method\n"
    },
    "DeliveringOrderItem" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Unique identifier of the order item\n"
        },
        "action" : {
          "type" : "string",
          "description" : "Action performed on the order item - add, replace, or remove\n"
        },
        "state" : {
          "type" : "string",
          "description" : "State of the order item\n"
        },
        "quantity" : {
          "type" : "integer",
          "description" : "Quantity of the order item\n"
        },
        "extensions" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object",
            "properties" : { }
          },
          "$ref" : "#/definitions/DeliveringOrderItemExtensions"
        }
      },
      "description" : "Order item that requires a delivery and is related to the *deliveryMethodOrderItem*\n"
    },
    "DeliveryProductOffering" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Unique identifier of the product offering\n"
        },
        "name" : {
          "type" : "string",
          "description" : "Name of the product offering\n"
        },
        "href" : {
          "type" : "string",
          "description" : "Hypertext reference to the product offering\n"
        },
        "type" : {
          "type" : "string",
          "description" : "Type of the product offering\n"
        },
        "version" : {
          "type" : "string",
          "description" : "Version of the product offering\n"
        },
        "primary" : {
          "type" : "boolean",
          "description" : "Indicates whether the product offering has a business significance for the customer&#58;\n- It is reflected as a product for the customer and it is actionable - the customer can perform ordering actions on it\n- An action performed on a primary offer can impact the actions available for its bundled or dependent offers (for example, when ownership of a primary offer is changed some internal offers cannot be added or removed)\n"
        },
        "productOfferingCharacteristic" : {
          "type" : "array",
          "description" : "List of characteristics for the product offering. The type of the characteristic is determined by the related characteristic property entity.\n",
          "items" : {
            "$ref" : "#/definitions/DeliveryProductOfferingCharacteristic"
          }
        },
        "attachment" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Attachment"
          }
        },
        "metadata" : {
          "type" : "array",
          "description" : "Product offering metadata\n",
          "items" : {
            "$ref" : "#/definitions/Metadata"
          }
        },
        "itemTotalPrice" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OrderPrice"
          }
        },
        "itemPrice" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OrderPrice"
          }
        },
        "orderItem" : {
          "type" : "array",
          "description" : "Order items that can be used by the product offerings\n",
          "items" : {
            "$ref" : "#/definitions/ProductOrderOrderItemRef"
          }
        },
        "appointmentRequired" : {
          "description" : "Is appointment required for this product offering    \n"
        },
        "extensions" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object",
            "properties" : { }
          },
          "x-amdocs" : {
            "refDefinition" : "DeliveryProductOfferingExtensions"
          }
        }
      },
      "description" : "Reference to the product offering\n"
    },
    "DeliveryProductOfferingCharacteristic" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "Text identifier of the product offering characteristic\n"
        },
        "valueType" : {
          "type" : "string",
          "description" : "Value type of the characteristic\n"
        },
        "value" : {
          "type" : "array",
          "description" : "Available values under the characteristic\n",
          "items" : {
            "$ref" : "#/definitions/DeliveryProductOfferingCharacteristicValue"
          }
        },
        "productSpecification" : {
          "type" : "string",
          "description" : "Reference to the product specification catalog entity under which the product offering characteristic is defined.\nThe product specification reference exists only for characteristics that are related to the product offering via a product specification.\nThus, the product specification reference can be used for grouping the product offering characteristics under a shared product specification identifier (or none).\n"
        },
        "metadata" : {
          "type" : "array",
          "description" : "Product offering metadata\n",
          "items" : {
            "$ref" : "#/definitions/Metadata"
          }
        },
        "extensions" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object",
            "properties" : { }
          },
          "x-amdocs" : {
            "refDefinition" : "DeliveryProductOfferingCharacteristicExtensions"
          }
        }
      },
      "description" : "List of descriptive characteristics for the Discovery flows derived from the product offering and the included product specification (if exists)\n"
    },
    "DeliveryProductOfferingCharacteristicValue" : {
      "type" : "object",
      "properties" : {
        "value" : {
          "type" : "string",
          "description" : "Value of the characteristic\n"
        },
        "valueFrom" : {
          "type" : "string",
          "description" : "Lower limit of the characteristic value. This property is applicable only when a range filter is used.\n"
        },
        "valueTo" : {
          "type" : "string",
          "description" : "Upper limit of the characteristic value. This property is applicable only when a range filter is used.\n"
        },
        "unitOfMeasure" : {
          "type" : "string",
          "description" : "Unit of measurement of the characteristic value of the product offering\n"
        },
        "default" : {
          "type" : "boolean",
          "description" : "Indicates whether the product offering characteristic value is the default value as defined in the product offering catalog configuration.\nOnly one value can be selected as a default. In the case of a range filter, the selected range is the default.\n"
        },
        "extensions" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object",
            "properties" : { }
          },
          "x-amdocs" : {
            "refDefinition" : "DeliveryProductOfferingCharacteristicValueExtensions"
          }
        }
      },
      "description" : "Available values of the descriptive characteristic\n"
    },
    "ProductOrderOrderItemRef" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Unique identifier of the containing product order\n"
        },
        "href" : {
          "type" : "string",
          "description" : "Hypertext reference to the containing product order\n"
        },
        "orderItemId" : {
          "type" : "string",
          "description" : "Unique identifier of the product order item (optional)\n"
        },
        "orderItemAction" : {
          "type" : "string",
          "description" : "Action that is related to the product order item (optional)\n"
        }
      },
      "description" : "Reference to the order item related to the product order\n"
    },
    "DeliveringOrderItemExtensions" : {
      "type" : "object",
      "properties" : {
        "reservationId" : {
          "type" : "string"
        }
      }
    }
  },
  "x-dox-DesignDocs" : [ {
    "description" : "The Product Ordering Management subdomain places a product order with the required order parameters, including such related activities as validation, submitting to fulfillment, and managing the product order status. A product order entity is created based on a product offering that is defined in the product catalog. The subdomain enables configuring a product and capturing additional information, such as payment and delivery details, prior to submitting the order to fulfillment.\n"
  } ]
}